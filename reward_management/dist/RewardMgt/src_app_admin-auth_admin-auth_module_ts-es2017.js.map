{"version":3,"sources":["./src/app/admin-auth/admin-auth-routing.module.ts","./src/app/admin-auth/admin-auth.module.ts","./src/app/admin-auth/components/admin-login/admin-login.component.ts","./src/app/admin-auth/components/admin-login/admin-login.component.html","./src/app/admin-auth/components/admin-recover/admin-recover.component.ts","./src/app/admin-auth/components/admin-recover/admin-recover.component.html","./src/app/admin-auth/components/admin-sign-up/admin-sign-up.component.ts","./src/app/admin-auth/components/admin-sign-up/admin-sign-up.component.html"],"names":[],"mappings":"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","file":"src_app_admin-auth_admin-auth_module_ts-es2017.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminLoginComponent } from './components/admin-login/admin-login.component';\r\nimport { AdminRecoverComponent } from './components/admin-recover/admin-recover.component';\r\nimport { AdminSignUpComponent } from './components/admin-sign-up/admin-sign-up.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: AdminLoginComponent },\r\n  { path: 'signup', component: AdminSignUpComponent },\r\n  { path: 'recoverPassword/:token/:email/:date', component: AdminRecoverComponent },\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminAuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminAuthRoutingModule } from './admin-auth-routing.module';\r\nimport { AdminLoginComponent } from './components/admin-login/admin-login.component';\r\nimport { AdminSignUpComponent } from './components/admin-sign-up/admin-sign-up.component';\r\nimport { AdminRecoverComponent } from './components/admin-recover/admin-recover.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminLoginComponent,\r\n    AdminSignUpComponent,\r\n    AdminRecoverComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminAuthRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AdminAuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n\r\n  loginUserData = { loginEmail: '', loginPassword: '' }\r\n  emailControl = new FormControl('', [Validators.required, Validators.email]);\r\n  showRecoveryBlock = true;\r\n\r\n  constructor(private _router: Router, private admin: AdminService, private storage: StorageService,\r\n    private toaster: ToastrService, private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  singup() {\r\n    this._router.navigateByUrl('/superadmin/signup');\r\n  }\r\n  onSubmit() {\r\n    if (this.loginUserData.loginEmail != '' || this.loginUserData.loginPassword != '') {\r\n      this.spinner.show();\r\n      this.admin.onLogin(this.loginUserData.loginEmail, this.loginUserData.loginPassword).subscribe((data: any) => {\r\n        if (!data?.message) {\r\n          this.storage.setUserDetails(data);\r\n          this.spinner.hide();\r\n          this.toaster.success('Login Successful')\r\n          this._router.navigate(['/superadmin/dashboard'])\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          this.toaster.error(data?.message)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  submitRecovery() {\r\n    this.emailControl.markAllAsTouched();\r\n    if (this.emailControl.valid) {\r\n      this.spinner.show();\r\n      this.admin.forgotPassword(this.emailControl.value).subscribe((data: any) => {\r\n        this.spinner.hide();\r\n        if (!data.message) {\r\n          this.showRecoveryBlock = !this.showRecoveryBlock;\r\n        }\r\n        else {\r\n          this.toaster.error(\"User is not available,Please sign up\")\r\n        }\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.toaster.error(\"Network Error\")\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row vh-100\">\r\n        <div class=\"col-lg-7 col-md-12 positive-relative\">\r\n            <div class=\"logo p-5\">\r\n                <img src=\"https://ca-studentdev.inhabitr.com/assets/img/inhabitr_logo/caLogoNew.png\" width=\"200\"\r\n                    height=\"100\" alt=\"alt_text\" style=\"max-width:100px;height:auto;\">\r\n            </div>\r\n\r\n            <div class=\"login-main\">\r\n                <img src=\"assets/images/rewards-image.png\" />\r\n                <h3 class=\"admin\">REWARDS SUPERADMIN</h3>\r\n                <p style=\"color: #858181;\">Manage your CA property managers.</p>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-5 col-md-12 p-0 bg-theme\">\r\n            <div class=\"m-auto login-align\" id=\"bgTheme\">\r\n                <div>\r\n                    <h4 class=\"mt-5 text-center\" style=\"font-weight: 600;\">WELCOME BACK</h4>\r\n                    <p class=\"text-center\" style=\"font-weight:100 !important;color:black;\">Sign In to your Account</p>\r\n                </div>\r\n                <div class=\"login-form\">\r\n                    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"mb-1\">Email ID</label>\r\n                            <input required #username=\"ngModel\" type=\"text\" name=\"username\"\r\n                                [(ngModel)]=\"loginUserData.loginEmail\" class=\"form-control padding-input login_control\"\r\n                                placeholder=\"Enter your Email ID\">\r\n                            <span *ngIf=\"username.invalid && username.touched\" class=\"error\">Enter email Id</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"mb-1\">Password</label>\r\n                            <input type=\"password\" required #password=\"ngModel\"\r\n                                [(ngModel)]=\"loginUserData.loginPassword\" name=\"password\" ngModel\r\n                                class=\"form-control padding-input login_control\" placeholder=\"Enter your Password\">\r\n                            <span *ngIf=\"password.invalid && password.touched\" class=\"error\">Enter valid password</span>\r\n                        </div>\r\n                        <div class=\"form-group text-end\">\r\n                            <a class=\"mb-3 align-right forgot-password \" data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#forgotPassword\" (click)=\"showRecoveryBlock = true\">Forgot Password?</a>\r\n                        </div>\r\n                        <div class=\" text-center login-block\">\r\n                            <button type=\"submit\" class=\"btn btn-primary mb-4\">LOGIN</button><br />\r\n                            <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"background-color:#1969AF\"\r\n                                (click)=\"singup()\">SIGNUP</button> -->\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal fade\" id=\"forgotPassword\" tabindex=\"-1\" aria-labelledby=\"forgotPasswordLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-3\">\r\n            <div class=\"modal-header border-0\">\r\n                <!-- <h5 class=\"modal-title\" id=\"forgotPasswordLabel\">Modal title</h5> -->\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <div class=\"modal-body text-center\">\r\n                <h3 class=\"border-bottom pb-2\">RECOVER PASSWORD</h3>\r\n                <div class=\"form-group\" *ngIf=\"showRecoveryBlock\">\r\n                    <p>Please provide your email</p>\r\n                    <input type=\"text\" class=\"pass_recovery\" [formControl]=\"emailControl\">\r\n                    <div *ngIf=\"emailControl.touched && emailControl?.errors?.required\">\r\n                        Please enter recovery email\r\n                    </div>\r\n                    <div *ngIf=\"emailControl.touched && emailControl?.errors?.email\">\r\n                        Please enter valid email\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!showRecoveryBlock\">\r\n                    <p>An email has been sent. Please click\r\n                        the link when you receive it.</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center border-0\">\r\n                <button type=\"button\" class=\"btn  btn_theme\" (click)=\"submitRecovery() \" *ngIf=\"showRecoveryBlock\">Email\r\n                    me a recovery\r\n                    link</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"emailControl.reset()\" data-bs-dismiss=\"modal\"\r\n                    *ngIf=\"!showRecoveryBlock\">Close\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-recover',\r\n  templateUrl: './admin-recover.component.html',\r\n  styleUrls: ['./admin-recover.component.css']\r\n})\r\nexport class AdminRecoverComponent implements OnInit {\r\n\r\n  passwordForm: FormGroup;\r\n  showPasswordForm = true;\r\n  tempPassword: any;\r\n  email: any;\r\n\r\n  get signUpControls() {\r\n    return this.passwordForm.controls\r\n  }\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private spinner: NgxSpinnerService\r\n    , private route: ActivatedRoute, private admin: AdminService, private toaster: ToastrService) {\r\n    this.route.params.subscribe(val => {\r\n      if (val && val?.token && val?.email) {\r\n        this.tempPassword = val?.token.replace(':', '');\r\n        this.email = val?.email;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.passwordForm = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, { validators: this.confirmPassword })\r\n  }\r\n\r\n\r\n  confirmPassword(group: AbstractControl): { [key: string]: any } | null {\r\n    const password = group.get('password')?.value;\r\n    const confirmPassword = group.get('confirmPassword')?.value;\r\n    if ((password == confirmPassword)) {\r\n      return null;\r\n    }\r\n    else {\r\n      return { 'mismatch': true }\r\n    }\r\n  }\r\n\r\n  submitPasswordChange() {\r\n    this.passwordForm.markAllAsTouched();\r\n    if (this.passwordForm.valid) {\r\n      const obj = {\r\n        email: this.email, newPassword: this.passwordForm.get('password')?.value, tempPassword:\r\n          this.tempPassword\r\n      }\r\n      this.spinner.show();\r\n      this.admin.resetPassword(obj).subscribe((data) => {\r\n        this.spinner.hide();\r\n        this.toaster.success(\"Password reset Sucessfull\");\r\n        this.showPasswordForm = !this.showPasswordForm\r\n      }, err => {\r\n        this.spinner.hide();\r\n        this.toaster.error(\"Network error\")\r\n      })\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.router.navigate(['/superadmin'])\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"logo\">\r\n        <img src=\"https://ca-studentdev.inhabitr.com/assets/img/inhabitr_logo/caLogoNew.png\" width=\"200\" height=\"100\"\r\n            alt=\"alt_text\" border=\"0\" align=\"center\"\r\n            style=\"width:100%;max-width:100px;height:auto;background:#ffffff;font-size:15px;line-height:20px;color:#555555;margin:auto;padding: 18px 0px 0px 0px;\">\r\n    </div>\r\n\r\n    <div class=\"card mt-4\">\r\n        <div class=\"card-body p-4\" *ngIf = \"showPasswordForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <div>\r\n                        <h4 class=\"mt-5 text-center\" style=\"font-weight: 600;\">CHANGE PASSWORD</h4>\r\n                        <section>\r\n                            <h5 class=\"mt-5 text-center\" style=\"font-weight: 500;\">In order to protect your account,\r\n                                make sure your password:\r\n                            </h5>\r\n                            <p>∙ Is longer than 5 characters</p>\r\n                            <p>∙ Does not match or significantly contain your username</p>\r\n                            <!-- <p>∙ Use letters, numbers and special characters</p> -->\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form [formGroup]=\"passwordForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <div class=\"form-group  mt-4\">\r\n                            <label>NEW PASSWORD</label>\r\n                            <input type=\"password\" class=\"form-control mt-4\" formControlName=\"password\" placeholder=\"Enter a password\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['password']?.touched && signUpControls['password']?.errors?.required\">\r\n                                Password is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['password']?.touched && signUpControls['password']?.errors?.minlength\">\r\n                                Minimum 6 characters are required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <div class=\"form-group  mt-4\">\r\n                            <label>RE-ENTER PASSWORD</label>\r\n                            <input type=\"password\" class=\"form-control mt-4\" formControlName=\"confirmPassword\" placeholder=\"Enter a password\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['confirmPassword']?.touched && signUpControls['confirmPassword']?.errors?.required && !passwordForm?.errors?.mismatch\">\r\n                                Confirm Password is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['confirmPassword']?.touched && passwordForm?.errors?.mismatch\">\r\n                                Confirm Password does not match with Password.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mt-5 text-center\">\r\n                        <button class=\"btn btn-primary\" (click)=\"submitPasswordChange()\">CHANGE PASSWORD</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"card-body p-4 text-center d-flex align-items-center justify-content-center\" *ngIf = \"!showPasswordForm\" style=\"min-height: 400px;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <section>\r\n                        <h5>Your password has been reset successfully!</h5>\r\n                    </section>\r\n                </div>\r\n                <div class=\"mt-5 text-center\">\r\n                    <button class=\"btn btn-primary\" (click)=\"login()\">LOGIN</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-sign-up',\r\n  templateUrl: './admin-sign-up.component.html',\r\n  styleUrls: ['./admin-sign-up.component.css']\r\n})\r\nexport class AdminSignUpComponent implements OnInit {\r\n\r\n  signUpForm: FormGroup;\r\n  buildingList: any;\r\n\r\n  get signUpControls() {\r\n    return this.signUpForm.controls\r\n  }\r\n\r\n  constructor(private formBuilder: FormBuilder, private _router: Router ,private admin:AdminService\r\n    , private storage:StorageService , private toaster :ToastrService , private spinner:NgxSpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initSignUpForm();\r\n  }\r\n\r\n  backToLogin() {\r\n    this._router.navigate(['/superadmin/login'])\r\n  }\r\n\r\n  initSignUpForm() {\r\n    this.signUpForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      // buildingName: [null, Validators.required],\r\n      passWord: ['', [Validators.required, Validators.minLength(6)]],\r\n      loginEmail: ['', [Validators.required, Validators.email]],\r\n      // address: ['', Validators.required],\r\n      // state: ['', Validators.required],\r\n      // city: ['', Validators.required],\r\n      // country: ['US', Validators.required],\r\n      // zipcode: ['', Validators.required],\r\n    })\r\n  }\r\n\r\n  signUp() {\r\n    if (this.signUpForm.valid) {\r\n      const obj = { ...this.signUpForm.value }\r\n      this.spinner.show();\r\n      this.admin.signUp(obj).subscribe((data:any) => {\r\n        if (!data.message) {\r\n          // this.storage.setUserDetails(data);\r\n          this.spinner.hide();\r\n          this.toaster.success('SignUp Successful')\r\n          this._router.navigate(['/superadmin/login'])\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          this.toaster.error(data?.message)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"logo\">\r\n        <img src=\"https://ca-studentdev.inhabitr.com/assets/img/inhabitr_logo/caLogoNew.png\" (click)=\"backToLogin()\"\r\n            width=\"200\" height=\"100\" alt=\"alt_text\" border=\"0\" align=\"center\"\r\n            style=\"width:100%;max-width:100px;height:auto;background:#ffffff;font-size:15px;line-height:20px;color:#555555;margin:auto;padding: 18px 0px 0px 0px;\">\r\n    </div>\r\n    <div class=\"card mb-1\">\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <div>\r\n                        <h3 class=\"text-center\">WELCOME TO THE CA PORTAL</h3>\r\n                        <h5 class=\"text-center\">Let’s get your home essentials reward authorization started.</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form [formGroup]=\"signUpForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>FIRST NAME</label>\r\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\r\n                                placeholder=\"Enter first name\">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['firstName']?.touched && signUpControls['firstName']?.errors?.required\">\r\n                                First Name is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>LAST NAME</label>\r\n                            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\r\n                                placeholder=\"Enter last name\">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['lastName']?.touched&& signUpControls['lastName']?.errors?.required\">\r\n                                Last Name is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>EMAIL</label>\r\n                            <input type=\"text\" formControlName=\"loginEmail\" class=\"form-control\"\r\n                                placeholder=\"Enter your email \">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['loginEmail']?.touched && signUpControls['loginEmail']?.errors?.required\">\r\n                                Email is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['loginEmail']?.touched && signUpControls['loginEmail']?.errors?.email\">\r\n                                Enter Valid Email.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>PASSWORD</label>\r\n                            <input type=\"password\" formControlName=\"passWord\" class=\"form-control\"\r\n                                placeholder=\"Password\">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['passWord']?.touched && signUpControls['passWord']?.errors?.required\">\r\n                                Password is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['passWord']?.touched && signUpControls['passWord']?.errors?.minlength\">\r\n                                Password must be at least 6 characters long.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>ADDRESS</label>\r\n                            <input type=\"text\" formControlName=\"address\" class=\"form-control\"\r\n                                placeholder=\"Enter your address \">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['address']?.touched && signUpControls['address']?.errors?.required\">\r\n                                Address is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>STATE</label>\r\n                            <input type=\"text\" formControlName=\"state\" class=\"form-control\"\r\n                                placeholder=\"Enter your state\">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['state']?.touched && signUpControls['state']?.errors?.required\">\r\n                                State is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>CITY</label>\r\n                            <input type=\"text\" formControlName=\"city\" class=\"form-control\"\r\n                                placeholder=\"Enter your city \">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['city']?.touched && signUpControls['city']?.errors?.required\">\r\n                                City is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>ZIPCODE</label>\r\n                            <input type=\"text\" formControlName=\"zipcode\" class=\"form-control\"\r\n                                placeholder=\"Enter your zipcode\">\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['zipcode']?.touched && signUpControls['zipcode']?.errors?.required\">\r\n                                ZipCode is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div> -->\r\n                <!-- <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>BUILDING NAME</label>\r\n                            <select placeholder=\"Select a Property\" formControlName=\"buildingName\">\r\n                                <option [value]=\"null\">Select a Property</option>\r\n                            </select>\r\n                            <div class=\"err-msg mt-2\"\r\n                                *ngIf=\"signUpControls['buildingName']?.touched && signUpControls['buildingName']?.errors?.required\">\r\n                                Building Name is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div> -->\r\n            </form>\r\n            <div class=\"submit text-center\">\r\n                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!signUpForm.valid\"\r\n                    (click)=\"signUp()\">SUBMIT</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card back-login border-0\">\r\n        <div class=\"\">\r\n            <span style=\"padding-right: 5px;color: black;text-decoration: none;\">Back to</span><a\r\n                [routerLink]=\"['/superadmin/login']\"><span class=\"ml-2\">Login</span></a>\r\n\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}