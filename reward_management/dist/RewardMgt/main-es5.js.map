{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/recover-password/recover-password.component.html","webpack:///src/app/authentication/recover-password/recover-password.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/dashboard/cancelled-rewards/cancelled-rewards.component.ts","webpack:///src/app/dashboard/cancelled-rewards/cancelled-rewards.component.html","webpack:///src/app/dashboard/create-reward/create-reward.component.html","webpack:///src/app/dashboard/create-reward/create-reward.component.ts","webpack:///src/app/dashboard/invoice-payment/invoice-payment.component.html","webpack:///src/app/dashboard/invoice-payment/invoice-payment.component.ts","webpack:///src/app/dashboard/invoices/invoices.component.html","webpack:///src/app/dashboard/invoices/invoices.component.ts","webpack:///src/app/dashboard/layout/footer/footer.component.ts","webpack:///src/app/dashboard/layout/footer/footer.component.html","webpack:///src/app/dashboard/layout/header/header.component.ts","webpack:///src/app/dashboard/layout/header/header.component.html","webpack:///src/app/dashboard/layout/sidebar/sidebar.component.ts","webpack:///src/app/dashboard/layout/sidebar/sidebar.component.html","webpack:///src/app/dashboard/payments/payments.component.html","webpack:///src/app/dashboard/payments/payments.component.ts","webpack:///src/app/dashboard/return-items/return-items.component.ts","webpack:///src/app/dashboard/return-items/return-items.component.html","webpack:///src/app/dashboard/reward-details/reward-details.component.html","webpack:///src/app/dashboard/reward-details/reward-details.component.ts","webpack:///src/app/dashboard/reward-details/transaction-details/transaction-details.component.html","webpack:///src/app/dashboard/reward-details/transaction-details/transaction-details.component.ts","webpack:///src/app/dashboard/rewards/rewards.component.html","webpack:///src/app/dashboard/rewards/rewards.component.ts","webpack:///src/app/interceptor/interceptor.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/client-side.service.ts","webpack:///src/app/services/rewardmgt.service.ts","webpack:///src/app/services/storage.service.ts","webpack:///src/app/shared/components/admin-table-filter/admin-table-filter.component.html","webpack:///src/app/shared/components/admin-table-filter/admin-table-filter.component.ts","webpack:///src/app/shared/components/load-cash/load-cash.component.html","webpack:///src/app/shared/components/load-cash/load-cash.component.ts","webpack:///src/app/shared/components/refund-items/refund-items.component.html","webpack:///src/app/shared/components/refund-items/refund-items.component.ts","webpack:///src/app/shared/components/table-filter/table-filter.component.ts","webpack:///src/app/shared/components/table-filter/table-filter.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///node_modules/moment/locale|sync|/^/.*$"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","LoginComponent","SignupComponent","RecoverPasswordComponent","HeaderComponent","CreateRewardComponent","canActivate","AuthGuard","RewardsComponent","RewardDetailsComponent","TransactionDetailsComponent","InvoicesComponent","CancelledRewardsComponent","PaymentsComponent","InvoicePaymentComponent","redirectTo","pathMatch","ReturnItemsComponent","loadChildren","m","AdminAuthModule","AdminDashboardModule","AppRoutingModule","RouterModule","AppComponent","storage","reward","clientSide","admin","title","propertyId","getPropertyId","getBuildingAmount","checkPlatformBrowser","getBuildingList","AppModule","provide","HTTP_INTERCEPTORS","useClass","Interceptor","multi","BrowserModule","FormsModule","ReactiveFormsModule","NgxSpinnerModule","HttpClientModule","SharedModule","BrowserAnimationsModule","ToastrModule","NgbModule","InfiniteScrollModule","FooterComponent","SidebarComponent","emailControl","auth","_router","cookieService","toastr","spinner","loginUserData","loginEmail","loginPassword","FormControl","Validators","showRecoveryBlock","document","getElementById","style","height","window","innerHeight","toString","navigateByUrl","show","onLogin","subscribe","data","message","hide","setUserDetails","success","navigate","error","markAllAsTouched","valid","forgotPassword","value","err","onSubmit","formBuilder","router","route","showPasswordForm","params","val","token","email","tempPassword","replace","passwordForm","controls","initForm","group","password","confirmPassword","validators","get","obj","newPassword","resetPassword","signUpForm","initSignUpForm","getBuldingList","buildingList","patchForm","length","find","item","patchValue","buildingName","disable","disabled","requestObj","getRawValue","propertyObj","address","state","propertyStateName","city","country","zipcode","postalCode","propertyIdList","Number","signUp","firstName","lastName","passWord","backToLogin","toaster","isRewardGenerated","expDate","Date","loadCash","minDate","year","getFullYear","month","getMonth","day","getDate","initRewardForm","getBuildingName","rewardForm","valueChanges","buildingAmount","accountBalance","setErrors","balanceAmount","residentId","mobileNo","rewardAmount","checkForPositiveNumber","dateField","FormGroup","startDate","endDate","formGroup","userData","JSON","parse","getUserDetails","buildingDetails","propertyDataList","date","getTime","objDate","getFormattedDate","createReward","trim","rewardPromoData","getLastGeneratedReward","rewardHistory","$","modal","reset","latest","reduce","a","b","updatedDatetime","lastGivenReward","generatedDate","control","checkedInvoices","isPayAllInvoices","invoices","queryParams","payAll","invoice","currentInvoice","event","target","checked","map","push","index","findIndex","invoiceNo","splice","isExist","residentName","amount","paymentStatus","collection","getRewardList","res","toggle","loginName","getUserName","logOut","render","propertyName","getPropertyName","className","hasClass","classList","contains","removeClass","addClass","addPayment","count","promoCount","lastPromoCount","searchString","getPromoCodeList","getRewardTransaction","transactions","getRewards","promoCodeList","console","log","isResult","some","status","filter","acc","searchChangeEvent","rewardService","rewardDetails","history","rewardTransactions","totalRewards","rewardId","getData","getRewardTransactionBasedOnId","getTotal","arr","affirm","forEach","orderId","refund","promoCodeListMaster","rewardType","type","deleteAmount","query","start","isMoreData","isApiLoading","getPropertyAddress","pageYOffset","next","getRecentlyRewards","Array","isArray","x","rewardEndDate","today","current","deleteBalance","currentBalance","rewardBalance","deleteReward","detletedAmount","request","getAccessToken","headers","HttpHeaders","set","AuthRequest","clone","handle","AdminService","http","BehaviorSubject","environment","PropertyAddress","url","post","getQueryString","number","isEnabled","queryArray","prop","hasOwnProperty","encode","encodeURIComponent","encodeVal","join","queryString","ClientSideService","platformId","isPlatformBrowser","PLATFORM_ID","RewardmgtService","loginurl","signupUrl","rewardUrl","paymentType","StorageService","localStorage","setItem","stringify","getItem","userDetails","clear","name","AdminTableFilterComponent","searchText","myDate","nextDay","setDate","maxDate","initial","outPutObject","search","disableSearch","selectedFilter","EventEmitter","_isReconciliation","getBuidlingList","pipe","debounceTime","distinctUntilChanged","emit","onlySelf","emitEvent","enable","$M","$D","$y","formattedDate","selected","LoadCashComponent","renderer","payType","paymentModeCredit","paymentModeBank","amountBlock","checkValidity","buildingAmountDetails","stripePayment","bankPayment","self","handler","StripeCheckout","configure","key","locale","response","completePayment","closed","removeStyle","body","amountInCents","Math","floor","open","currency","loadAmount","Plaid","create","env","clientName","product","selectAccount","onLoad","onSuccess","publicToken","metadata","onExit","onEvent","eventName","RefundItemsComponent","adminService","isproductshow","getOrderList","i","productId","getOrderItems","orderItems","orderData","calculateRefundAmount","rewardRefund","getActualRefundAmount","totalRewardAmount","packageItems","totalOrderItems","totalPrice","element","packageProducts","itemQuantity","price","returnStatus","round","goBack","TableFilterComponent","storageService","searchInputChange","CommonModule","NgxDaterangepickerMd","production","stripeKey","enableProdMode","platformBrowser","bootstrapModule","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './authentication/login/login.component'\r\nimport { SignupComponent } from './authentication/signup/signup.component'\r\nimport { HeaderComponent } from './dashboard/layout/header/header.component'\r\nimport { CreateRewardComponent } from './dashboard/create-reward/create-reward.component'\r\nimport { RewardDetailsComponent } from './dashboard/reward-details/reward-details.component'\r\nimport { InvoicesComponent } from './dashboard/invoices/invoices.component'\r\nimport { RewardsComponent } from './dashboard/rewards/rewards.component';\r\nimport { CancelledRewardsComponent } from './dashboard/cancelled-rewards/cancelled-rewards.component';\r\nimport { PaymentsComponent } from './dashboard/payments/payments.component';\r\nimport { InvoicePaymentComponent } from './dashboard/invoice-payment/invoice-payment.component';\r\nimport { TransactionDetailsComponent } from './dashboard/reward-details/transaction-details/transaction-details.component';\r\nimport { RecoverPasswordComponent } from './authentication/recover-password/recover-password.component';\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { ReturnItemsComponent } from './dashboard/return-items/return-items.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'signup/:email/:id', component: SignupComponent },\r\n  { path: 'recoverPassword/:token/:email/:date', component: RecoverPasswordComponent },\r\n  { path: 'header', component: HeaderComponent },\r\n  { path: 'create-reward', component: CreateRewardComponent, canActivate: [AuthGuard] },\r\n  { path: 'rewards', component: RewardsComponent, canActivate: [AuthGuard] },\r\n  { path: 'reward-details', component: RewardDetailsComponent, canActivate: [AuthGuard] },\r\n  { path: 'reward-details/transactions/:id', component: TransactionDetailsComponent, canActivate: [AuthGuard] },\r\n  { path: 'invoices', component: InvoicesComponent, canActivate: [AuthGuard] },\r\n  { path: 'cancelled-rewards', component: CancelledRewardsComponent, canActivate: [AuthGuard] },\r\n  { path: 'payments', component: PaymentsComponent, canActivate: [AuthGuard] },\r\n  { path: 'invoices-payment', component: InvoicePaymentComponent, canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'reward-details/transactions/refund/:id/:orderId' , component:ReturnItemsComponent},\r\n  {\r\n    path: 'superadmin',\r\n    loadChildren: () => import('./admin-auth/admin-auth.module').then(m => m.AdminAuthModule) ,\r\n  },\r\n  {\r\n    path: 'superadmin/dashboard',\r\n    loadChildren: () => import('./admin-dashboard/admin-dashboard.module').then(m => m.AdminDashboardModule) ,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from './services/admin.service';\r\nimport { ClientSideService } from './services/client-side.service';\r\nimport { RewardmgtService } from './services/rewardmgt.service';\r\nimport { StorageService } from './services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'RewardMgt';\r\n  propertyId: any;\r\n\r\n\r\n  constructor(private storage: StorageService, private reward: RewardmgtService, private clientSide: ClientSideService\r\n    , private admin: AdminService) { }\r\n    \r\n  ngOnInit(): void {\r\n    this.propertyId = this.storage.getPropertyId();\r\n    if (this.propertyId)\r\n      this.getBuildingAmount(this.propertyId);\r\n\r\n    if (this.clientSide.checkPlatformBrowser()) {\r\n      this.admin.getBuildingList();\r\n    }\r\n  }\r\n\r\n  getBuildingAmount(id: any) {\r\n    this.reward.getBuildingAmount(id);\r\n  }\r\n\r\n}\r\n","<!-- <app-login></app-login> -->\r\n<router-outlet></router-outlet>\r\n<ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-atom\">\r\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\r\n</ngx-spinner>","import { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS  }from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './dashboard/layout/header/header.component';\r\nimport { FooterComponent } from './dashboard/layout/footer/footer.component';\r\nimport { LoginComponent } from './authentication/login/login.component';\r\nimport { SignupComponent } from './authentication/signup/signup.component';\r\nimport { CreateRewardComponent } from './dashboard/create-reward/create-reward.component';\r\nimport { SidebarComponent } from './dashboard/layout/sidebar/sidebar.component';\r\nimport { RewardDetailsComponent } from './dashboard/reward-details/reward-details.component';\r\nimport { InvoicesComponent } from './dashboard/invoices/invoices.component';\r\nimport { RewardsComponent } from './dashboard/rewards/rewards.component';\r\nimport { CancelledRewardsComponent } from './dashboard/cancelled-rewards/cancelled-rewards.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { Interceptor } from './interceptor/interceptor';\r\nimport { PaymentsComponent } from './dashboard/payments/payments.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { InvoicePaymentComponent } from './dashboard/invoice-payment/invoice-payment.component';\r\nimport { TransactionDetailsComponent } from './dashboard/reward-details/transaction-details/transaction-details.component';\r\nimport { RecoverPasswordComponent } from './authentication/recover-password/recover-password.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { ReturnItemsComponent } from './dashboard/return-items/return-items.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    CreateRewardComponent,\r\n    SidebarComponent,\r\n    RewardsComponent,\r\n    RewardDetailsComponent,\r\n    InvoicesComponent,\r\n    CancelledRewardsComponent,\r\n    PaymentsComponent,\r\n    InvoicePaymentComponent,\r\n    TransactionDetailsComponent,\r\n    RecoverPasswordComponent,\r\n    ReturnItemsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxSpinnerModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    NgbModule,\r\n    InfiniteScrollModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: Interceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row vh-100\">\r\n        <div class=\"col-lg-7 col-md-12 positive-relative\">\r\n            <div class=\"logo p-5\">\r\n                <img src=\"https://ca-studentdev.inhabitr.com/assets/img/inhabitr_logo/caLogoNew.png\" width=\"200\"\r\n                    height=\"100\" alt=\"alt_text\" style=\"max-width:100px;height:auto;\">\r\n            </div>\r\n\r\n            <div class=\"login-main\">\r\n                <img src=\"../../assets/rewards-image.png\" />\r\n                <h3 class=\"admin\">REWARDS ADMINISTRATION</h3>\r\n                <p style=\"color: #858181;\">Manage you CA resident's rewards, balances and invoices .</p>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-5 col-md-12 p-0 bg-theme\">\r\n            <div class=\"m-auto login-align\" id=\"bgTheme\">\r\n                <div>\r\n                    <h4 class=\"mt-5 text-center\" style=\"font-weight: 600;\">WELCOME BACK</h4>\r\n                    <p class=\"text-center\" style=\"font-weight:100 !important;color:#ffffff;\">Sign In to your Account</p>\r\n                </div>\r\n                <div class=\"login-form\">\r\n                    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"mb-1\">Email ID</label>\r\n                            <input required #username=\"ngModel\" type=\"text\" name=\"username\"\r\n                                [(ngModel)]=\"loginUserData.loginEmail\" class=\"form-control padding-input login_control\"\r\n                                placeholder=\"Enter your Email ID\">\r\n                            <span *ngIf=\"username.invalid && username.touched\" class=\"error\">Enter email Id</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label class=\"mb-1\">Password</label>\r\n                            <input type=\"password\" required #password=\"ngModel\"\r\n                                [(ngModel)]=\"loginUserData.loginPassword\" name=\"password\" ngModel\r\n                                class=\"form-control padding-input login_control\" placeholder=\"Enter your Password\">\r\n                            <span *ngIf=\"password.invalid && password.touched\" class=\"error\">Enter valid password</span>\r\n                        </div>\r\n                        <div class=\"form-group text-end\">\r\n                            <a class=\"mb-3 align-right forgot-password \" data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#forgotPassword\" (click)=\"showRecoveryBlock = true\">Forgot Password?</a>\r\n                        </div>\r\n                        <div class=\" text-center login-block\">\r\n                            <button type=\"submit\" class=\"btn btn-primary mb-4\">LOGIN</button><br />\r\n                            <!-- <button type=\"button\" class=\"btn btn-primary\" style=\"background-color:#1969AF\"\r\n                                (click)=\"singup()\">SIGNUP</button> -->\r\n                        </div>\r\n                        <div class=\"form-group text-end mt-3\">\r\n                            <a class=\"mb-3 align-right forgot-password \" [routerLink]=\"['/','superadmin']\">Super Admin</a>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal fade\" id=\"forgotPassword\" tabindex=\"-1\" aria-labelledby=\"forgotPasswordLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-3\">\r\n            <div class=\"modal-header border-0\">\r\n                <h5 class=\"modal-title\" id=\"forgotPasswordLabel\">Modal title</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <div class=\"modal-body text-center\">\r\n                <h3 class=\"border-bottom pb-2\">RECOVER PASSWORD</h3>\r\n                <div class=\"form-group\" *ngIf=\"showRecoveryBlock\">\r\n                    <p>Please provide your email</p>\r\n                    <input type=\"text\" class=\"pass_recovery\" [formControl]=\"emailControl\">\r\n                    <div *ngIf=\"emailControl.touched && emailControl?.errors?.required\">\r\n                        Please enter recovery email\r\n                    </div>\r\n                    <div *ngIf=\"emailControl.touched && emailControl?.errors?.email\">\r\n                        Please enter valid email\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!showRecoveryBlock\">\r\n                    <p>An email has been sent. Please click\r\n                        the link when you receive it.</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center border-0\">\r\n                <button type=\"button\" class=\"btn  btn_theme\" (click)=\"submitRecovery() \" *ngIf=\"showRecoveryBlock\">Email\r\n                    me a recovery\r\n                    link</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"emailControl.reset()\"\r\n                    data-bs-dismiss=\"modal\" *ngIf=\"!showRecoveryBlock\">Close\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { RewardmgtService } from '../../services/rewardmgt.service';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginUserData = { loginEmail: '', loginPassword: '' }\r\n  emailControl = new FormControl('',[Validators.required,Validators.email]);\r\n  showRecoveryBlock = true;\r\n\r\n\r\n  constructor(private auth: RewardmgtService, private _router: Router, private cookieService: CookieService\r\n    , private toastr: ToastrService, private storage: StorageService,private spinner: NgxSpinnerService ,\r\n    private reward :RewardmgtService) { }\r\n\r\n  ngOnInit(): void {\r\n    (<HTMLInputElement>document.getElementById(\"bgTheme\")).style.height = window.innerHeight.toString() + 'px';\r\n  }\r\n  singup() {\r\n    this._router.navigateByUrl('/signup');\r\n  }\r\n  onSubmit() {\r\n    if(this.loginUserData.loginEmail != '' || this.loginUserData.loginPassword != '')  {\r\n    this.spinner.show();\r\n    this.auth.onLogin(this.loginUserData.loginEmail, this.loginUserData.loginPassword).subscribe((data: any) => {\r\n      if (!data?.message) {\r\n        this.spinner.hide();\r\n        this.storage.setUserDetails(data);\r\n        this.auth.getBuildingAmount(this.storage.getPropertyId());\r\n        this.toastr.success('Login Successful')\r\n        this._router.navigate(['/create-reward'])\r\n      }\r\n      else {\r\n        this.spinner.hide();\r\n        this.toastr.error(data?.message)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n  submitRecovery() {\r\n    this.emailControl.markAllAsTouched();\r\n    if (this.emailControl.valid) {\r\n       //api call\r\n       this.spinner.show();\r\n      this.reward.forgotPassword(this.emailControl.value).subscribe((data:any) => {\r\n        this.spinner.hide();\r\n        if(!data.message) {\r\n        this.showRecoveryBlock = !this.showRecoveryBlock;\r\n        } \r\n        else {\r\n          this.toastr.error(\"User is not available,Please sign up\")\r\n        }\r\n      } ,err => {\r\n        this.spinner.hide();\r\n        this.toastr.error(\"Network Error\")\r\n      })   \r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"logo\">\r\n        <img src=\"https://ca-studentdev.inhabitr.com/assets/img/inhabitr_logo/caLogoNew.png\" width=\"200\" height=\"100\"\r\n            alt=\"alt_text\" border=\"0\" align=\"center\"\r\n            style=\"width:100%;max-width:100px;height:auto;background:#ffffff;font-size:15px;line-height:20px;color:#555555;margin:auto;padding: 18px 0px 0px 0px;\">\r\n    </div>\r\n\r\n    <div class=\"card mt-4\">\r\n        <div class=\"card-body p-4\" *ngIf = \"showPasswordForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <div>\r\n                        <h4 class=\"mt-5 text-center\" style=\"font-weight: 600;\">CHANGE PASSWORD</h4>\r\n                        <section>\r\n                            <h5 class=\"mt-5 text-center\" style=\"font-weight: 500;\">In order to protect your account,\r\n                                make sure your password:\r\n                            </h5>\r\n                            <p>∙ Is longer than 5 characters</p>\r\n                            <p>∙ Does not match or significantly contain your username</p>\r\n                            <!-- <p>∙ Use letters, numbers and special characters</p> -->\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form [formGroup]=\"passwordForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <div class=\"form-group  mt-4\">\r\n                            <label>NEW PASSWORD</label>\r\n                            <input type=\"password\" class=\"form-control mt-4\" formControlName=\"password\" placeholder=\"Enter a password\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['password']?.touched && signUpControls['password']?.errors?.required\">\r\n                                Password is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['password']?.touched && signUpControls['password']?.errors?.minlength\">\r\n                                Minimum 6 characters are required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                        <div class=\"form-group  mt-4\">\r\n                            <label>RE-ENTER PASSWORD</label>\r\n                            <input type=\"password\" class=\"form-control mt-4\" formControlName=\"confirmPassword\" placeholder=\"Enter a password\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['confirmPassword']?.touched && signUpControls['confirmPassword']?.errors?.required && !passwordForm?.errors?.mismatch\">\r\n                                Confirm Password is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['confirmPassword']?.touched && passwordForm?.errors?.mismatch\">\r\n                                Confirm Password does not match with Password.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mt-5 text-center\">\r\n                        <button class=\"btn btn-primary\" (click)=\"submitPasswordChange()\">CHANGE PASSWORD</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class=\"card-body p-4 text-center d-flex align-items-center justify-content-center\" *ngIf = \"!showPasswordForm\" style=\"min-height: 400px;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <section>\r\n                        <h5>Your password has been reset successfully!</h5>\r\n                    </section>\r\n                </div>\r\n                <div class=\"mt-5 text-center\">\r\n                    <button class=\"btn btn-primary\" (click)=\"login()\">LOGIN</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RewardmgtService } from 'src/app/services/rewardmgt.service';\r\n\r\n@Component({\r\n  selector: 'app-recover-password',\r\n  templateUrl: './recover-password.component.html',\r\n  styleUrls: ['./recover-password.component.css']\r\n})\r\nexport class RecoverPasswordComponent implements OnInit {\r\n\r\n  passwordForm: FormGroup;\r\n  showPasswordForm = true;\r\n  tempPassword : any;\r\n  email :any;\r\n\r\n  get signUpControls() {\r\n    return this.passwordForm.controls\r\n  }\r\n\r\n  constructor(private formBuilder: FormBuilder,private router:Router , private route:ActivatedRoute,\r\n    private reward :RewardmgtService , private toastr: ToastrService ,private spinner: NgxSpinnerService) {\r\n    this.route.params.subscribe(val => {\r\n      if (val && val?.token && val?.email) { \r\n          this.tempPassword = val?.token.replace(':', '');\r\n          this.email = val?.email;\r\n      }\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.passwordForm = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, { validators: this.confirmPassword })\r\n  }\r\n\r\n\r\n  confirmPassword(group: AbstractControl): { [key: string]: any } | null {\r\n    const password = group.get('password')?.value;\r\n    const confirmPassword = group.get('confirmPassword')?.value;\r\n    if ((password == confirmPassword)) {\r\n      return null;\r\n    }\r\n    else {\r\n      return { 'mismatch': true }\r\n    }\r\n  }\r\n\r\n  submitPasswordChange() {\r\n    this.passwordForm.markAllAsTouched();\r\n    if (this.passwordForm.valid) { \r\n      const obj = {email : this.email , newPassword : this.passwordForm.get('password')?.value , tempPassword :\r\n    this.tempPassword}\r\n    this.spinner.show();\r\n      this.reward.resetPassword(obj).subscribe((data)=>{\r\n        this.spinner.hide();\r\n        this.toastr.success(\"Password reset Sucessfull\");\r\n        this.showPasswordForm = !this.showPasswordForm\r\n      } , err => {\r\n        this.spinner.hide();\r\n        this.toastr.error(err.error.message)\r\n      })\r\n     \r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"logo\">\r\n        <img src=\"https://ca-studentdev.inhabitr.com/assets/img/inhabitr_logo/caLogoNew.png\" (click)=\"backToLogin()\"\r\n            width=\"200\" height=\"100\" alt=\"alt_text\" border=\"0\" align=\"center\"\r\n            style=\"width:100%;max-width:100px;height:auto;background:#ffffff;font-size:15px;line-height:20px;color:#555555;margin:auto;padding: 18px 0px 0px 0px;\">\r\n    </div>\r\n    <div class=\"card mb-1\">\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                    <div>\r\n                        <h3 class=\"text-center\">WELCOME TO THE CA PORTAL</h3>\r\n                        <h5 class=\"text-center\">Let’s get your home essentials reward authorization started.</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form [formGroup]=\"signUpForm\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>FIRST NAME</label>\r\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" placeholder=\"Enter first name\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['firstName']?.touched && signUpControls['firstName']?.errors?.required\">\r\n                                First Name is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>LAST NAME</label>\r\n                            <input  type=\"text\" formControlName=\"lastName\" class=\"form-control\" placeholder=\"Enter last name\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['lastName']?.touched&& signUpControls['lastName']?.errors?.required\">\r\n                                Last Name is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>EMAIL</label>\r\n                            <input type=\"text\" formControlName=\"loginEmail\" class=\"form-control\" placeholder=\"Enter your email \">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['loginEmail']?.touched && signUpControls['loginEmail']?.errors?.required\">\r\n                                Email is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['loginEmail']?.touched && signUpControls['loginEmail']?.errors?.email\">\r\n                                Enter Valid Email.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>USER NAME</label>\r\n                            <input type=\"text\" formControlName=\"userName\" class=\"form-control\" placeholder=\"Enter username\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['userName']?.touched&& signUpControls['userName']?.errors?.required\">\r\n                                User Name is required.\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>PASSWORD</label>\r\n                            <input type=\"password\" formControlName=\"passWord\" class=\"form-control\" placeholder=\"Password\">\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['passWord']?.touched && signUpControls['passWord']?.errors?.required\">\r\n                                Password is required.\r\n                            </div>\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['passWord']?.touched && signUpControls['passWord']?.errors?.minlength\">\r\n                                Password must be at least 6 characters long.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>BUILDING NAME</label>\r\n                            <select placeholder=\"Select a Property\" formControlName=\"buildingName\">\r\n                                <option [value]=\"null\">Select a Property</option>\r\n                                <option *ngFor=\"let property of buildingList\" [value]=\"property.id\">{{property?.name}}\r\n                                </option>\r\n                            </select>\r\n                            <div class=\"err-msg mt-2\" *ngIf=\"signUpControls['buildingName']?.touched && signUpControls['buildingName']?.errors?.required\">\r\n                                Building Name is required.\r\n                            </div>\r\n                            <!-- <input type=\"text\" formControlName=\"buildingName\"  class=\"form-control\" placeholder=\"Enter building name\"> -->\r\n                        </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n            </form>\r\n            <div class=\"submit text-center\">\r\n                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!signUpForm.valid\"\r\n                    (click)=\"signUp()\">SUBMIT</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card back-login border-0\" >\r\n        <div class=\"\">\r\n            <span style=\"padding-right: 5px;color: black;text-decoration: none;\">Back to</span><a  [routerLink]=\"['/','login']\"><span class=\"ml-2\">Login</span></a>\r\n            \r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SIGNUP } from 'src/app/models/interfaces';\r\nimport { RewardmgtService } from 'src/app/services/rewardmgt.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  signUpForm: FormGroup;\r\n  email:any;\r\n  buildingList: any;\r\n  id:any;\r\n\r\n  get signUpControls() {\r\n    return this.signUpForm.controls\r\n  }\r\n  constructor(private _router: Router, private formBuilder: FormBuilder, private reward: RewardmgtService,private toastr: ToastrService\r\n    ,private storage: StorageService , private spinner: NgxSpinnerService , private route:ActivatedRoute) { \r\n      this.route.params.subscribe(val => {\r\n        if (val && val?.email && val?.id) { \r\n            this.email = val?.email;\r\n            this.id = val?.id;\r\n        }\r\n      });\r\n    }\r\n  backToLogin() {\r\n    this._router.navigateByUrl('/login');\r\n  }\r\n  ngOnInit(): void {\r\n    this.initSignUpForm();\r\n    this.getBuildingList();\r\n  }\r\n\r\n  getBuildingList() {\r\n    this.reward.getBuldingList().subscribe((data: any) => {\r\n      if (data) {\r\n        this.buildingList = data['PropertyAddress'];\r\n        if (this.email && this.id) {\r\n          this.patchForm();\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  patchForm() {\r\n    if (this.buildingList && this.buildingList.length) {\r\n      const obj = this.buildingList.find((item: any) => item.id == this.id);\r\n      if (obj) {\r\n        this.signUpForm.patchValue({ buildingName: obj.id });\r\n        this.signUpForm.controls['buildingName'].disable();\r\n      }\r\n      if (this.email) {\r\n        this.signUpForm.patchValue({ loginEmail: this.email, disabled: true })\r\n        this.signUpForm.controls['loginEmail'].disable();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  signUp() {\r\n    if (this.signUpForm.valid) {\r\n      let requestObj: SIGNUP = {} as any;\r\n      requestObj = this.signUpForm.getRawValue();\r\n      const propertyObj = this.buildingList.find((item: { id: any; }) => item.id == this.signUpForm.get('buildingName')?.value)\r\n      if (propertyObj) {\r\n        requestObj.address = propertyObj.address;\r\n        requestObj.state = propertyObj.propertyStateName;\r\n        requestObj.city = propertyObj.city;\r\n        requestObj.country = propertyObj.country;\r\n        requestObj.zipcode = propertyObj.postalCode;\r\n        requestObj.propertyIdList = [(Number(this.signUpForm.get('buildingName')?.value))]\r\n        delete requestObj?.buildingName\r\n      }\r\n      this.reward.signUp(requestObj).subscribe((data) => {\r\n        this.spinner.show();\r\n        if (!data.message) {\r\n             this.storage.setUserDetails(data);\r\n             this.spinner.hide();\r\n             this.toastr.success('SignUp Successful')\r\n             this._router.navigate(['/login'])\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          this.toastr.error(data?.message)\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  initSignUpForm() {\r\n    this.signUpForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      buildingName: [{ value: null, disabled: false }, Validators.required],\r\n      passWord: ['', [Validators.required, Validators.minLength(6)]],\r\n      loginEmail: [{ value: '', disabled: false }, [Validators.required, Validators.email]],\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cancelled-rewards',\r\n  templateUrl: './cancelled-rewards.component.html',\r\n  styleUrls: ['./cancelled-rewards.component.css']\r\n})\r\nexport class CancelledRewardsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <app-table-filter></app-table-filter>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-lg-12\">\r\n                <table class=\"table  table-borderless\">\r\n                    <thead class=\"tableHeader w-100\">\r\n                      <tr class=\"text-center\">\r\n                        <th width=\"15%\">Resident ID</th>\r\n                        <th width=\"10%\">First Name</th>\r\n                        <th width=\"10%\">Last Name</th>\r\n                        <th width=\"20%\">Building Name</th>\r\n                        <th width=\"10%\">Date</th>\r\n                        <th width=\"10%\">Reverted Amount</th>\r\n                        <th width=\"10%\">Before Invoice</th>\r\n                        <th width=\"15%\">After Invoice</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>#0000</td>\r\n                        <td>Dave</td>\r\n                        <td>Mathews</td>\r\n                        <td>The Link Minneapolis \r\n                          Low-Rise</td>\r\n                        <td>12/11/2021</td>\r\n                        <td>$300</td>\r\n                        <td>$300</td>\r\n                        <td><p class=\"mb-1\">$300</p>\r\n                          <button class=\"btn btn-primary mt-2\">Annual Invoice</button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>#0000</td>\r\n                        <td>Dave</td>\r\n                        <td>Mathews</td>\r\n                        <td>The Link Minneapolis \r\n                          Low-Rise</td>\r\n                        <td>12/11/2021</td>\r\n                        <td>$300</td>\r\n                        <td>$300</td>\r\n                        <td><p class=\"mb-1\">$300</p>\r\n                          <button class=\"btn btn-primary mt-2\">Annual Invoice</button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>#0000</td>\r\n                        <td>Dave</td>\r\n                        <td>Mathews</td>\r\n                        <td>The Link Minneapolis \r\n                          Low-Rise</td>\r\n                        <td>12/11/2021</td>\r\n                        <td>$300</td>\r\n                        <td>$300</td>\r\n                        <td><p class=\"mb-1\">$300</p>\r\n                          <button class=\"btn btn-primary mt-2\">Annual Invoice</button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>#0000</td>\r\n                        <td>Dave</td>\r\n                        <td>Mathews</td>\r\n                        <td>The Link Minneapolis \r\n                          Low-Rise</td>\r\n                        <td>12/11/2021</td>\r\n                        <td>$300</td>\r\n                        <td>$300</td>\r\n                        <td><p class=\"mb-1\">$300</p>\r\n                          <button class=\"btn btn-primary mt-2\">Annual Invoice</button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>#0000</td>\r\n                        <td>Dave</td>\r\n                        <td>Mathews</td>\r\n                        <td>The Link Minneapolis \r\n                          Low-Rise</td>\r\n                        <td>12/11/2021</td>\r\n                        <td>$300</td>\r\n                        <td>$300</td>\r\n                        <td><p class=\"mb-1\">$300</p>\r\n                          <button class=\"btn btn-primary mt-2\">Annual Invoice</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <ng-container *ngIf=\"!isRewardGenerated\">\r\n            <div class=\"row mb-4\">\r\n                <div class=\"col-lg-12 \">\r\n                    <app-load-cash [showRewards]=\"true\"></app-load-cash>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <!-- <div class=\"col-lg-1\">\r\n                    <img src=\"assets/create-reward.png\" class=\"create-promo-code\">\r\n                </div> -->\r\n                <div class=\"col-lg-12\">\r\n                    <div>\r\n                        <div class=\"d-flex justify-content-between\">\r\n                        <h3 class=\"welcome\">CREATE A REWARD FOR RESIDENT</h3> \r\n                        <!-- <a style=\"color: black;\" [routerLink]=\"['/rewards']\">Recently Created Rewards</a> -->\r\n                    </div>\r\n                        <p class=\"reward-text\">Enter the residents details to generate a promo code for redemption. The code will be emailed to\r\n                            the\r\n                            resident.</p>\r\n                    </div>\r\n                    <form [formGroup]=\"rewardForm\">\r\n                        <div class=\"row mt-4\">\r\n                            <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"form-group mt-4\">\r\n                                    <label for=\"firstName\">First Name</label>\r\n                                    <input type=\"text\" placeholder=\"Enter resident’s first name\" formControlName=\"firstName\"\r\n                                        class=\"form-control mt-3\" id=\"firstName\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"form-group mt-4\">\r\n                                    <label for=\"lastName\">Last Name</label>\r\n                                    <input type=\"text\" placeholder=\"Enter resident’s last name\" formControlName=\"lastName\"\r\n                                        class=\"form-control  mt-3\" id=\"lastName\">\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"form-group mt-4\">\r\n                                    <label for=\"resident\">Resident ID</label>\r\n                                    <input type=\"text\" placeholder=\"Enter Company Name\" formControlName=\"residentId\"\r\n                                        class=\"form-control  mt-3\" id=\"resident\">\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"form-group mt-4\">\r\n                                    <label for=\"mobile\">Phone Number</label>\r\n                                    <input type=\"text\" placeholder=\"Enter Phone Number\" formControlName=\"mobileNo\"\r\n                                        class=\"form-control  mt-3\" id=\"mobile\">\r\n                                    <div class=\"err-msg\" *ngIf=\"formControl['mobileNo']?.touched && formControl['mobileNo']?.errors?.pattern\">\r\n                                        Enter 10 digit Mobile Number.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    \r\n                            <!-- <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"form-group mt-4\">\r\n                                    <label for=\"resident\">Building Name</label>\r\n                                    <input type=\"text\" formControlName=\"buildingName\" class=\"form-control  mt-3\"\r\n                                        [value]=\"buildingDetails['name']\">\r\n                                </div>\r\n                            </div> -->\r\n                    \r\n                            <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"form-group mt-4\">\r\n                                    <label for=\"reward\" class=\"mb-2\">Reward Amount</label>\r\n                                    <input type=\"number\" placeholder=\"$\" formControlName=\"rewardAmount\" class=\"form-control  mt-3\"\r\n                                        id=\"reward\">\r\n                                    <div class=\"err-msg\" *ngIf=\"formControl['rewardAmount']?.touched && formControl['rewardAmount']?.errors?.positiveNumber\">\r\n                                        Enter valid reward amount\r\n                                    </div>\r\n                                    <div class=\"err-msg\" *ngIf=\"formControl['rewardAmount']?.errors?.maxNumber\">\r\n                                        *Please enter reward value lesser than the available balance\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"form-group mt-4\">\r\n                                    <label for=\"email\" class=\"mb-2\">Email ID</label>\r\n                                    <input type=\"text\" placeholder=\"Enter the residents email\" formControlName=\"email\"\r\n                                        class=\"form-control  mt-3\" id=\"email\">\r\n                                    <div *ngIf=\"formControl['email']?.touched && formControl['email']?.errors?.email\">\r\n                                        Enter Valid Email.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mt-2\">\r\n                                <div class=\"row\">\r\n                                   \r\n                                    <!-- <div class=\"col-6\">\r\n                                        <form formGroupName=\"dateField\">\r\n                                        <div class=\"form-group mt-4 position-relative\">\r\n                                            <label for=\"start\" class=\" mb-4\">Start Date</label>\r\n                                            <input type=\"text\" formControlName=\"startDate\" class=\"datepicker_input form-control\" ngbDatepicker\r\n                                                 #start=\"ngbDatepicker\" />\r\n                                            <i class=\"fas fa-calendar-alt pointer calender\" aria-hidden=\"true\" (click)=\"start.toggle()\"></i>\r\n                                        </div>\r\n                                        </form>\r\n                                    </div> -->\r\n                                    <div class=\"col-8\">\r\n                                        <form formGroupName=\"dateField\">\r\n                                        <div class=\"form-group mt-4 position-relative\">\r\n\r\n                                            <label for=\"start\" class=\"mb-4\">Expiry Date</label>\r\n                                            <input type=\"text\" formControlName=\"endDate\" placeholder=\"yyyy-mm-dd\" [minDate]=\"minDate\" class=\"datepicker_input form-control\" ngbDatepicker\r\n                                                 #end=\"ngbDatepicker\" />\r\n                                            <i class=\"fas fa-calendar-alt pointer calender\" aria-hidden=\"true\" (click)=\"end.toggle()\"></i>\r\n                                            \r\n                                        </div>\r\n                                        </form>\r\n                                        <div class=\"err-msg\" *ngIf=\"rewardForm.get('dateField')?.get('endDate')?.touched && rewardForm.get('dateField')?.get('endDate')?.errors?.required\">\r\n                                            Expiry date is required\r\n                                        </div>\r\n                                        <div class=\"err-msg\" *ngIf=\"formControl['dateField']?.errors?.incorrectData\">\r\n                                            Expiry date should be greater than start date\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-4 \">\r\n                            <div class=\"col-7 text-left\">\r\n                                <button type=\"button\" (click)=\"generateReward()\" class=\"btn btn-primary\"\r\n                                    [disabled]=\"!rewardForm.valid\">GENERATE\r\n                                    REWARD (${{accountBalance ? accountBalance : '0'}} BALANCE)</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <div class=\"p-5\" *ngIf=\"isRewardGenerated\">\r\n            <div class=\"row \">\r\n                <div class=\"col-lg-12\">\r\n                    <h2 >THE REWARD WAS GENERATED!</h2>\r\n                    <p class=\"reward-text mt-4\">The reward for resident <b>{{rewardPromoData?.firstName}} {{rewardPromoData?.lastName}}</b> staying at <b>{{buildingDetails['name']}}</b> has been created!</p>\r\n                    <p class=\"reward-text \">An email with the following reward amount has been sent to resident's inbox:</p>\r\n                </div>\r\n                <div class=\"promo-badge text-center mt-4\">\r\n                    {{rewardPromoData?.rewardId}}\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col-lg-12\">\r\n                    <section>\r\n                        <div class=\"row align-items-baseline\">\r\n                            <div class=\"col-6\">\r\n                                <h2>Date Generated: <span class=\"reward-text\">{{generatedDate | date:'longDate'}}</span></h2>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Building Name: <span class=\"reward-text\">{{buildingDetails['name']}}</span></h2>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Reward Amount Issued Now: <span class=\"reward-text\">${{lastGivenReward}}</span></h2>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Total Reward Amount Issued: <span class=\"reward-text\">${{rewardPromoData?.rewardAmount}}</span></h2>\r\n                            </div>\r\n                            <!-- <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Resident Name:  <span class=\"reward-text\">{{rewardPromoData?.firstName}} {{rewardPromoData?.lastName}}</span></h2>\r\n                            </div> -->\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <!-- <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Resident ID:  <span class=\"reward-text\">{{rewardPromoData?.residentId}}</span></h2>\r\n                            </div> -->\r\n                            <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Resident Name:  <span class=\"reward-text\">{{rewardPromoData?.firstName}} {{rewardPromoData?.lastName}}</span></h2>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Email: <span class=\"reward-text\">{{rewardPromoData?.email}}</span></h2>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Phone Number:  <span class=\"reward-text\">{{rewardForm.get('mobileNo')?.value}}</span></h2>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <h2 class=\"mt-3\">Expiry Date: <span class=\"reward-text\">{{getExpiryDate(rewardForm.get('dateField')?.get('endDate')?.value) | date:'fullDate'}}</span></h2>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <h2>Date Generated: <span class=\"reward-text\">{{rewardPromoData?.updatedDatetime | date:'fullDate'}}</span></h2>\r\n                        <h2 class=\"mt-3\">Resident ID:  <span class=\"reward-text\">{{rewardPromoData?.residentId}}</span></h2>\r\n                        <h2 class=\"mt-3\">Resident Name:  <span class=\"reward-text\">{{rewardPromoData?.firstName}} {{rewardPromoData?.lastName}}</span></h2>\r\n                        <h2 class=\"mt-3\">Building Name: <span class=\"reward-text\">{{buildingDetails['name']}}</span></h2>\r\n                        <h2 class=\"mt-3\">Email: <span class=\"reward-text\">{{rewardPromoData?.email}}</span></h2>\r\n                        <h2 class=\"mt-3\">Total Reward Amount: <span class=\"reward-text\">${{rewardPromoData?.rewardAmount}}</span></h2> -->\r\n                    </section>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <button class=\"btn btn-success\" (click)=\"finishRewardCreation()\">\r\n                    FINISH\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n<button type=\"button\" #createExistingReward class=\"btn btn-primary\" [hidden]=\"true\" data-bs-toggle=\"modal\" data-bs-target=\"#createExisting\">\r\n    Create Reward\r\n  </button>\r\n\r\n  <div class=\"modal fade\" id=\"createExisting\" tabindex=\"-1\" aria-labelledby=\"createExistingLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content p-4\">\r\n            <div class=\"modal-header border-0\">\r\n        \r\n            </div>\r\n            <div class=\"modal-body text-center\">\r\n                <h5 class=\" pb-2\">This resident has previously been generated rewards:</h5>\r\n                <div class=\"card mt-4\">\r\n                    <div class=\"card-body\">\r\n                        <p class=\"m-0 \" class=\"reward-history\">$300 on June 5th 2021  (06/05/2021)</p>\r\n                        <p class=\"m-0 \" class=\"reward-history\">$300 on June 5th 2021  (06/05/2021)</p>\r\n                        <p class=\"m-0 \" class=\"reward-history\">$300 on June 5th 2021  (06/05/2021)</p>\r\n                    </div>\r\n                </div>\r\n                <h5 class=\"mt-5 mb-2\">Would you like to continue generating a reward?</h5>\r\n            </div>\r\n            <div class=\"modal-footer border-0 d-flex justify-content-center\" style=\"flex-flow: row !important;\">\r\n                <button type=\"button\" class=\"btn  btn-primary btn-generate\" >GENERATE</button>\r\n                <button type=\"button\" class=\"btn  btn-dark btn-generate\" data-bs-dismiss=\"modal\">CANCEL</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"deletedReward1\" tabindex=\"-1\" aria-labelledby=\"deletedReward1dLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-4 header-style\">\r\n            <div class=\"modal-header border-0\">\r\n                <button  type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\" class=\"btn-close\"></button>\r\n            </div>\r\n                <div class=\"modal-body text-center pt-0 pb-4 mt-0\">\r\n                    <p class=\"mt-2 m-0 p-0\">This user is registered with another CA Property</p>\r\n                   \r\n                </div>\r\n                <div class=\"modal-footer justify-content-center border-0\">\r\n                    <button type=\"button\" class=\"btn btn-shopping\"  data-bs-dismiss=\"modal\">CLOSE</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n<ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-atom\">\r\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\r\n</ngx-spinner>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CREATE_REWARD } from 'src/app/models/interfaces';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { RewardmgtService } from '../../services/rewardmgt.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\ndeclare var $:any;\r\n\r\n@Component({\r\n  selector: 'app-create-reward',\r\n  templateUrl: './create-reward.component.html',\r\n  styleUrls: ['./create-reward.component.css']\r\n})\r\nexport class CreateRewardComponent implements OnInit {\r\n  rewardForm: FormGroup;\r\n  isRewardGenerated: boolean = false;\r\n  buildingDetails:any;\r\n  propertyId :any;\r\n  rewardPromoData:any;\r\n  buildingAmount :any ;\r\n  accountBalance:any;\r\n  buildingAmountDetails : any;\r\n  lastGivenReward : any;\r\n  expDate = new Date();\r\n  loadCash:any = false;\r\n  generatedDate:any;\r\n  minDate = {\r\n    year: this.expDate.getFullYear(),\r\n    month: this.expDate.getMonth() + 1,\r\n    day: this.expDate.getDate(),\r\n  };\r\n  \r\n\r\n  @ViewChild('createExistingReward', { static: false }) createExistingReward: ElementRef;\r\n\r\n  constructor(private reward:RewardmgtService,private formBuilder: FormBuilder ,private router: Router,\r\n    private storage:StorageService,private spinner:NgxSpinnerService,private toaster:ToastrService) {\r\n\r\n     }\r\n \r\n  ngOnInit(): void {\r\n\r\n    this.initRewardForm();\r\n    this.getBuildingName();\r\n    this.rewardForm.get('rewardAmount')?.valueChanges.subscribe((data) => {\r\n      if (data && data > 0 && data <= this.buildingAmount) {\r\n        this.accountBalance = this.buildingAmount - data;\r\n        this.rewardForm.get('rewardAmount')?.setErrors(null);\r\n      }\r\n      else if (data && data > 0 && data > this.buildingAmount) {\r\n        this.rewardForm.get('rewardAmount')?.setErrors({ 'maxNumber': true })\r\n        this.accountBalance = this.buildingAmount;\r\n      }\r\n      else {\r\n        this.accountBalance = this.buildingAmount;\r\n      }\r\n    })\r\n\r\n    this.reward.buildingAmount.subscribe((data:any) => {\r\n      if (data) {\r\n           this.buildingAmount = data?.balanceAmount;\r\n           this.accountBalance = this.buildingAmount;\r\n           this.loadCash  = false;\r\n      }\r\n      else {\r\n        this.loadCash = true;\r\n      }\r\n    })\r\n  }\r\n\r\n  get formControl () {\r\n    return this.rewardForm.controls\r\n  }\r\n  initRewardForm() {\r\n    this.rewardForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      residentId: [''],\r\n      mobileNo: ['', [Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      buildingName: [{value:'',disabled:true}],\r\n      rewardAmount: ['', [Validators.required , this.checkForPositiveNumber]],\r\n      dateField:new FormGroup({\r\n        startDate:new FormControl(null),\r\n        endDate:new FormControl(null,Validators.required),\r\n      }),\r\n      email: ['', [Validators.required, Validators.email]],\r\n    })\r\n  }\r\n\r\n  checkDateFields(formGroup: AbstractControl): { [key: string]: any } | null {\r\n    const startDate = formGroup.get('startDate')?.value;\r\n    const endDate = formGroup.get('endDate')?.value;\r\n    if (startDate != null && endDate != null) {\r\n      if (new Date(startDate.year, startDate.month, startDate.day) > new Date(endDate.year, endDate.month, endDate.day))\r\n        return { 'incorrectData': true };\r\n        else {\r\n          return null;\r\n        }\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  getBuildingName() {\r\n    const userData:any = JSON.parse(this.storage.getUserDetails());\r\n    this.buildingDetails = userData.propertyDataList[0];\r\n    this.propertyId = this.buildingDetails['id'];\r\n    this.rewardForm.patchValue({buildingName:this.buildingDetails['name']})\r\n    }\r\n\r\n  getFormattedDate(date:any) {\r\n    return date.year + '-' + date.month + '-' + date.day;\r\n  }\r\n\r\n  getExpiryDate(date :any) {\r\n    return new Date(date.year,date.month-1,date.day).getTime();\r\n  }\r\n  \r\n  generateReward() {\r\n    // this.createExistingReward.nativeElement.click();\r\n    if (this.rewardForm.valid) {\r\n      let requestObj: CREATE_REWARD = {} as CREATE_REWARD;\r\n      requestObj = this.rewardForm.value;\r\n      requestObj['propertyId'] = this.propertyId;\r\n      let objDate = {\r\n        endDate:this.getFormattedDate(requestObj?.dateField?.endDate)}\r\n      delete requestObj?.buildingName;\r\n      delete requestObj?.dateField;\r\n      delete requestObj?.mobileNo;\r\n      this.spinner.show();\r\n      this.reward.createReward(requestObj,objDate).subscribe((data) => {\r\n        if (data && data.message != \"propery doesn't has balance Amount to create reward, Please load now.\"\r\n        && data && data.message.trim() != \"please check user belongs to,can't give rewards to other property user.\".trim()) {\r\n          this.spinner.hide();\r\n          this.rewardPromoData = data;\r\n          this.getLastGeneratedReward(this.rewardPromoData?.rewardHistory);\r\n          this.isRewardGenerated = true;\r\n          this.reward.getBuildingAmount(this.storage.getPropertyId())\r\n        }\r\n        else if (data && data.message.trim() == \"please check user belongs to,can't give rewards to other property user.\".trim()) {\r\n          this.isRewardGenerated = false;\r\n          this.spinner.hide();\r\n         // this.toaster.error('error');\r\n          $('#deletedReward1').modal('show');\r\n          this.rewardForm.reset()\r\n        }\r\n        else {\r\n          this.toaster.error('Please Load Cash Before Creating Reward');\r\n          this.isRewardGenerated = false;\r\n          this.spinner.hide();\r\n        }\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  getLastGeneratedReward(rewardHistory: any) {\r\n    if (rewardHistory && rewardHistory.length > 0) {\r\n      const latest = rewardHistory.reduce((a: any, b: any) => {\r\n        return new Date(a.updatedDatetime) > new Date(b.updatedDatetime) ? a : b;\r\n      })\r\n      this.lastGivenReward = latest.rewardAmount ? latest.rewardAmount : 0;\r\n      this.generatedDate = latest.updatedDatetime ? latest.updatedDatetime : ''\r\n    }\r\n  }\r\n\r\n  finishRewardCreation() {\r\n    this.router.navigate(['/rewards'])\r\n  }\r\n\r\n  onBack() {\r\n    this.router.navigate(['/rewards'])\r\n  }\r\n\r\n  checkForPositiveNumber(control: AbstractControl): { [key: string]: any } | null {\r\n    const reward = control.value;\r\n    if (reward > 0) {\r\n      return null;\r\n    }\r\n    else {\r\n      return { 'positiveNumber': true }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <div class=\"row\" *ngIf=\"!isPayAllInvoices\">\r\n            <div class=\"col-6 mt-1\">\r\n            \r\n                <h5 style=\"cursor:pointer\" (click)=\"backToInvoice()\"><span><i class=\"fas fa-arrow-left fa-1x theme-color pointer\" style=\"margin-right: 10px;\"></i></span>  BACK TO INVOICES</h5>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <ng-container *ngIf=\"isPayAllInvoices\">\r\n                    <div class=\"row mb-3 align-items-center\">\r\n                        <div class=\"col-3\">\r\n                            <div class=\"circle\">\r\n                                <div class=\"bubble\"><span>2</span></div>\r\n                                <img class=\"img-style-note\" src=\"assets/invoice.png\" alt=\"invoice\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-5  text-center\">\r\n                            <p class=\"m-0\"><span class=\"badge badge-light w-100\">You currently have 2 Unpaid\r\n                                    Invoices</span></p>\r\n                            <select class=\"mt-3 ml-unpaid\" placeholder=\"Select a Payment Option\">\r\n                                <option value=\"\">Credit Card/Debit Card</option>\r\n                                <option value=\"\">Bank Account</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <div class=\"d-flex flex-column align-items-center justify-content-center\">\r\n                                <h3>$300</h3>\r\n                                <button class=\"btn btn-success\" [disabled]=\"!checkedInvoicesLength\">PAY INVOICES</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row align-items-center\">\r\n                        <div class=\"col-1\">\r\n                            <div>\r\n                                <input class=\"form-check-input\" type=\"checkbox\"\r\n                                    [checked]=\"checkedInvoicesLength == invoices.length\" id=\"payAllInvoice\"\r\n                                    (click)=\"payAllSelected($event)\" value=\"\" aria-label=\"...\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-11\">\r\n                            <hr>\r\n                            <label style = \"cursor:pointer\" for=\"payAllInvoice\">SELECT ALL</label>\r\n                            <hr>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt-4 mb-2 align-items-center\" *ngFor=\"let invoiceList of invoices;let i = index\">\r\n                        <div class=\"row align-items-center\">\r\n                            <div class=\"col-1\">\r\n                                <div>\r\n                                    <input class=\"form-check-input align-checkbox\"\r\n                                        (click)=\"selectInvoice($event,invoiceList)\"\r\n                                        [checked]=\"findElementExists(invoiceList)\" type=\"checkbox\" id=\"checkboxNoLabel\"\r\n                                        value=\"\" aria-label=\"...\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <section>\r\n                                    <p><span class=\"badge badge-light\">{{invoiceList.invoiceNo}}</span></p>\r\n                                </section>\r\n\r\n                            </div>\r\n                            <div class=\"col-5\">\r\n                                <section>\r\n                                    <p><span class=\"invoice-details\">Date Generated:</span><span>\r\n                                            {{invoiceList.date}}</span></p>\r\n                                    <p><span class=\"invoice-details\">Resident ID:</span><span>\r\n                                            {{invoiceList.residentId}}</span></p>\r\n                                    <p><span class=\"invoice-details\">Resident Name:</span><span>\r\n                                            {{invoiceList.residentName}}</span></p>\r\n\r\n                                </section>\r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                <section>\r\n                                    <p><span class=\"invoice-details\">Building Name:</span><span>\r\n                                            {{invoiceList.buildingName}}</span></p>\r\n                                    <p><span class=\"invoice-details\">Amount:</span><span> {{invoiceList.amount}}</span>\r\n                                    </p>\r\n                                    <p><span class=\"invoice-details\">Invoice No:</span><span>\r\n                                            {{invoiceList.invoiceReference}}</span></p>\r\n\r\n                                </section>\r\n                            </div>\r\n                            <div class=\"row\" *ngIf=\"i < invoices.length - 1\">\r\n                                <div class=\"col-1\"></div>\r\n                                <div class=\"col-lg-11\">\r\n                                    <hr>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!isPayAllInvoices\">\r\n   \r\n                    <div class=\"row\">\r\n                        <div class=\"col-7 border-end\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"circle\">\r\n                \r\n                                        <img class=\"img-style-note\" src=\"assets/invoice.png\" alt=\"invoice\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-7 text-center\">\r\n                                    <select class=\"mt-3 ml-unpaid\" placeholder=\"Select a Payment Option\">\r\n                                        <option value=\"\">Credit Card/Debit Card</option>\r\n                                        <option value=\"\">Bank Account</option>\r\n                                    </select>\r\n                                    <button class=\"btn btn-success mt-5\" style=\"width:80%\">PAY INVOICE</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-5\">\r\n                            <div class=\"d-flex flex-column align-items-center justify-content-center\">\r\n                                <h3 class=\"mb-3\">AMOUNT DUE:</h3>\r\n                                <h3>$300</h3>\r\n                                <p class=\"mt-3\"><span class=\"badge badge-light w-100\">INVOICE NUMBER: L250065</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt-4\">\r\n                        <div class=\"col-12\">\r\n                            <hr>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row align-items-center mt-4\">\r\n                        <div class=\"col-3\">\r\n                            <section>\r\n                                <p><span class=\"badge badge-light\">L250065</span></p>\r\n                            </section>\r\n\r\n                        </div>\r\n                        <div class=\"col-5\">\r\n                            <section>\r\n                                <p><span class=\"invoice-details\">Date Generated:</span><span>\r\n                                    Wednesday, July 7th 2021</span></p>\r\n                                <p><span class=\"invoice-details\">Resident ID:</span><span>\r\n                                    #54732964</span></p>\r\n                                <p><span class=\"invoice-details\">Resident Name:</span><span>\r\n                                    Dre Chrisiano</span></p>\r\n\r\n                            </section>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <section>\r\n                                <p><span class=\"invoice-details\">Building Name:</span><span>\r\n                                    Infinite Chicago</span></p>\r\n                                <p><span class=\"invoice-details\">Amount:</span><span> $300</span>\r\n                                </p>\r\n                                <p><span class=\"invoice-details\">Invoice No:</span><span>\r\n                                    #78324987</span></p>\r\n\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-invoice-payment',\r\n  templateUrl: './invoice-payment.component.html',\r\n  styleUrls: ['./invoice-payment.component.css']\r\n})\r\nexport class InvoicePaymentComponent implements OnInit {\r\n\r\n  checkedInvoices:any = [];\r\n  isPayAllInvoices:boolean = false;\r\n  currentInvoice : any;\r\n\r\n  get checkedInvoicesLength() {\r\n    return  this.checkedInvoices.length;\r\n  }\r\n\r\n  invoices = [{\r\n    'invoiceNo': 'L250065',\r\n    'date': 'Wednesday, July 7th 2021',\r\n    'residentId': '#54732964',\r\n    'residentName': 'Dre Chrisiano',\r\n    'buildingName': 'Infinite Chicago',\r\n    'amount': '$300',\r\n    'invoiceReference': '#78324987',\r\n  },\r\n  {\r\n    'invoiceNo': 'L250066',\r\n    'date': 'Wednesday, July 7th 2021',\r\n    'residentId': '#54732964',\r\n    'residentName': 'Dre Chrisiano',\r\n    'buildingName': 'Infinite Chicago',\r\n    'amount': '$300',\r\n    'invoiceReference': '#78324987',\r\n  }]\r\n\r\n  constructor(private route: ActivatedRoute, private router:Router) {\r\n    this.route.queryParams.subscribe((params) => {\r\n      if (params.payAll) {\r\n        this.isPayAllInvoices = true;\r\n      }\r\n      else if (params.invoice) {\r\n        this.currentInvoice = params.invoice\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  payAllSelected(event: any) {\r\n    if (event.target.checked) {\r\n      this.invoices.map((item: any) => {\r\n        if (item) {\r\n          this.checkedInvoices.push(item);\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.checkedInvoices = [];\r\n    }\r\n  }\r\n\r\n  selectInvoice(event: any, invoice: any) {\r\n    if (event.target.checked) {\r\n      this.checkedInvoices.push(invoice);\r\n    }\r\n    else {\r\n      const index = this.checkedInvoices.findIndex((item: any) => { return item.invoiceNo == invoice.invoiceNo });\r\n      this.checkedInvoices.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  findElementExists(obj: any) {\r\n    const index = this.checkedInvoices.findIndex((item: any) => { return item.invoiceNo == obj.invoiceNo });\r\n    const isExist = index != -1 ? true : false;\r\n    return isExist;\r\n  }\r\n\r\n  backToInvoice() {\r\n    this.router.navigate(['/invoices'])\r\n  }\r\n}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <app-table-filter></app-table-filter>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-lg-12\">\r\n                <table class=\"table  table-borderless\">\r\n                    <thead class=\"tableHeader w-100\">\r\n                        <tr class=\"text-center\">\r\n                            <th width=\"5%\">Date</th>\r\n                            <th width=\"15%\">Invoice No.</th>\r\n                            <th width=\"15%\">Resident ID</th>\r\n                            <th width=\"15%\">Resident Name</th>\r\n                            <th width=\"20%\">Building Name</th>\r\n                            <th width=\"5%\">Amount</th>\r\n                            <th width=\"25%\">Payment Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let table of data\">\r\n                            <td>{{table.date}}</td>\r\n                            <td>{{table.invoice}}</td>\r\n                            <td>{{table.residentId}}</td>\r\n                            <td>{{table.residentName}}</td>\r\n                            <td>{{table.buildingName}}</td>\r\n                            <td>{{table.amount}}</td>\r\n                            <td class=\"d-flex align-items-center pl-0 pr-0\">\r\n                                <ng-container *ngIf=\"table.paymentStatus == 'UNPAID'\">\r\n                                    <span class=\"unpaid col text-center\">UNPAID</span><button\r\n                                        class=\"btn btn-primary\" (click)=\"invoicePayment(table)\">PAY NOW</button>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"table.paymentStatus == 'PAID'\">\r\n                                    <span class=\"paid col text-center\">PAID</span><button class=\"btn btn-primary\">VIEW DETAILS</button>\r\n                                </ng-container>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { RewardmgtService } from '../../services/rewardmgt.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-invoices',\r\n  templateUrl: './invoices.component.html',\r\n  styleUrls: ['./invoices.component.css']\r\n})\r\nexport class InvoicesComponent implements OnInit {\r\n\r\n  data = [{\r\n    date:\"12/11/2021\",\r\n    invoice:\"#000000\",\r\n    residentId:\"#000000\",\r\n    residentName:'Mathews, Dave',\r\n    buildingName:'The Link Minneapolis Low Rise',\r\n    amount:'$300',\r\n    paymentStatus:'UNPAID'\r\n  }, {\r\n    date:\"12/11/2021\",\r\n    invoice:\"#000000\",\r\n    residentId:\"#000000\",\r\n    residentName:'Mathews, Dave',\r\n    buildingName:'The Link Minneapolis Low Rise',\r\n    amount:'$300',\r\n    paymentStatus:'PAID'\r\n  },\r\n  {\r\n    date:\"12/11/2021\",\r\n    invoice:\"#000000\",\r\n    residentId:\"#000000\",\r\n    residentName:'Mathews, Dave',\r\n    buildingName:'The Link Minneapolis Low Rise',\r\n    amount:'$300',\r\n    paymentStatus:'PAID'\r\n  },\r\n  {\r\n    date:\"12/11/2021\",\r\n    invoice:\"#000000\",\r\n    residentId:\"#000000\",\r\n    residentName:'Mathews, Dave',\r\n    buildingName:'The Link Minneapolis Low Rise',\r\n    amount:'$300',\r\n    paymentStatus:'UNPAID'\r\n  },\r\n  {\r\n    date:\"12/11/2021\",\r\n    invoice:\"#000000\",\r\n    residentId:\"#000000\",\r\n    residentName:'Mathews, Dave',\r\n    buildingName:'The Link Minneapolis Low Rise',\r\n    amount:'$300',\r\n    paymentStatus:'UNPAID'\r\n  }]\r\n  constructor(private reward:RewardmgtService, private _router: Router) { }\r\n  collection:any=[];\r\n  ngOnInit(): void {\r\n    this.reward.getRewardList().subscribe((res)=>{\r\n      this.collection = res;\r\n    })\r\n  }\r\n  createReward() {\r\n    this._router.navigateByUrl('/create-reward'); \r\n  }\r\n\r\n  invoicePayment(value : any) {\r\n    this._router.navigate(['/invoices-payment'] , {queryParams :  {invoice : value.invoice}}); \r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  toggle = false;\r\n  loginName:any;\r\n  constructor(private storage:StorageService,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginName = this.storage.getUserName();\r\n  }\r\n\r\n  logOut() {\r\n       this.storage.logOut();\r\n       this.router.navigate(['login'])\r\n  }\r\n\r\n}\r\n","<div class=\"header\">\r\n  <div class=\"userTab\">\r\n    <img class=\"tabImage\" src=\"../../assets/profile-icon.png\" alt=\"profile\">\r\n    <label>{{loginName}}</label>\r\n    <div class=\"btn-group\"> \r\n      <button type=\"button\" class=\"style-caret\" class=\"btn dropdown-toggle dropdown-toggle-split\" data-bs-toggle=\"dropdown\">\r\n      </button>\r\n      <div class=\"dropdown-menu\" >\r\n        <a class=\"dropdown-item pointer\" (click)=\"logOut()\">Log Out</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, Renderer2 } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  propertyName :any;\r\n  constructor(private _router:Router, private render: Renderer2 , private storage:StorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.propertyName = this.storage.getPropertyName();\r\n  }\r\n  backToLogin() {\r\n    this._router.navigateByUrl('/login'); \r\n  }\r\n\r\n  toggleClass(event: any){\r\n    const className = 'boxShadow';\r\n    const hasClass = event.target.classList.contains(className);\r\n    if(hasClass) {\r\n      this.render.removeClass(event.target, className);\r\n    } else {\r\n      this.render.addClass(event.target, className);\r\n      this.render.addClass(event.target, className);\r\n    }\r\n  }\r\n}\r\n","<div class=\"sidenav\">\r\n    <div class=\"logo\">\r\n            <img src=\"../../assets/Logo-circle-icon.png\" alt=\"inhabitr_logo\">\r\n            <p class=\"text-center\"><span class=\"badge badge-light\">{{propertyName}}</span></p>\r\n    </div>\r\n    <div>\r\n       <span class=\"tabs d-block position-relative\"><img class=\"tabImage\" src=\"../../assets/add-icon.png\" alt=\"add\"><img class=\"d-none\" [ngClass]=\"{'rectangle-position':rl.isActive}\"  src=\"../../assets/Rectangle.png\" alt=\"add\"> <a routerLink=\"/create-reward\" routerLinkActive=\"active\" #rl=\"routerLinkActive\">CREATE REWARD</a></span>\r\n       <span class=\"tabs d-block position-relative\"><img class=\"tabImage\" src=\"../../assets/invoice-icon.png\" alt=\"reward\"><img class=\"d-none\" [ngClass]=\"{'rectangle-position':routerReward.isActive}\"  src=\"../../assets/Rectangle.png\" alt=\"add\"> <a routerLink=\"/reward-details\" routerLinkActive=\"active\" #routerReward=\"routerLinkActive\">REWARD TRANSACTIONS</a></span>  \r\n       <span class=\"tabs d-block position-relative\"><img class=\"tabImage\" src=\"../../assets/rewards-icon.png\" alt=\"reward\"><img class=\"d-none\" [ngClass]=\"{'rectangle-position':routerRewardDetails.isActive}\"  src=\"../../assets/Rectangle.png\" alt=\"add\"> <a routerLink=\"/rewards\" routerLinkActive=\"active\" #routerRewardDetails=\"routerLinkActive\">RECENTLY CREATED REWARDS</a></span>   \r\n       <!-- <span class=\"tabs\"><img class=\"tabImage\" src=\"../../assets/invoice-icon.png\" alt=\"invoice\"> <a routerLink=\"/invoices\" (click)=\"toggleClass($event)\">INVOICES</a></span>\r\n       <span class=\"tabs\"><img class=\"tabImage\" src=\"../../assets/payment-icon.png\" alt=\"payment\"> <a routerLink=\"/payments\" (click)=\"toggleClass($event)\">PAYMENTS</a></span> -->\r\n       <!-- <span class=\"tabs\"><img class=\"tabImage\" src=\"../../assets/add-icon.png\" alt=\"add\"> <a routerLink=\"/cancelled-rewards\" (click)=\"toggleClass($event)\">CANCELLED REWARD</a></span> -->\r\n    </div>\r\n  </div>\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body payment-paading\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 card-body border-right\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"col-4 float-start\">\r\n                                        <div>\r\n                                            <div class=\"circle\">\r\n                                                <div class=\"bubble\"><span>2</span></div>\r\n                                                <img class=\"img-style-note\" src=\"assets/invoice.png\" alt=\"invoice\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-8 float-start mt-4 ml-unpaid\">\r\n                                        <h2>Payment Details</h2>\r\n\r\n                                        <div\r\n                                            class=\"unpaid-invoices d-flex ml-unpaid align-items-center justify-content-center mt-4\">\r\n                                            You currently have 2 Unpaid Invoices\r\n                                        </div>\r\n\r\n                                        <select class=\"mt-3 ml-unpaid\" placeholder=\"Select a Payment Option\">\r\n                                            <option value=\"\">Credit Card/Debit Card</option>\r\n                                            <option value=\"\">Bank Account</option>\r\n                                        </select>\r\n\r\n                                        <div class=\"d-flex flex-row justify-content-between mt-3 ml-unpaid\">\r\n                                            <button class=\"btn btn-success m-2\" (click)=\"payAll()\">PAY INVOICES</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-6 card-body d-flex align-items-center p-4 \">\r\n                            <ng-container *ngIf = \"addPayment\">\r\n                               <div class=\"row\">\r\n                                   <div class=\"col-12 d-flex align-items-center pointer p-4\" (click)=\"addPayment=!addPayment\">\r\n                                       <img src=\"assets/addPayment.png\" alt=\"addpayment\">\r\n                                       <h5 class=\"ml-2\" style=\"margin-left: 10px;\">ADD A PAYMENT</h5>\r\n                                   </div>\r\n                               </div>\r\n                            </ng-container>\r\n                            <ng-container *ngIf = \"!addPayment\">\r\n                                <div class=\"mt-5 w-100\">\r\n                                    <section>\r\n                                        <h4>YOUR CARDS & BANK</h4>\r\n                                        <div class=\"d-flex flex-row align-items-center\">\r\n                                            <div class=\"mr-2\">VISA</div>\r\n                                            <p class=\"m-0\" style=\"margin-left:10px !important\"><span class=\"badge badge-light\">Default</span></p>\r\n                                        </div>\r\n                                        <p>Card Number: 00000-0000-0000-0000</p>\r\n                                        <p>Expiration Date: 00/0000</p>\r\n                                    </section>\r\n                                    <div class=\"d-flex flex-row\">\r\n                                        <button class=\"btn btn_theme add-card font10\" data-bs-toggle=\"modal\" data-bs-target=\"#addCard\">ADD A NEW\r\n                                            CARD OR BANK</button>\r\n                                        <button class=\"btn btn-dark font10\" data-bs-toggle=\"modal\" data-bs-target=\"#savedCards\">VIEW ALL SAVED\r\n                                            ACCOUNTS</button>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-lg-12\">\r\n                <hr>\r\n                <h2 class=\"recent-payment\">RECENT PAYMENTS</h2>\r\n                <hr>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-lg-12\">\r\n                <table class=\"table  table-borderless\">\r\n                    <thead class=\"tableHeader w-100\">\r\n                        <tr class=\" text-center\">\r\n                            <th>Date Paid</th>\r\n                            <th>Invoice No.</th>\r\n                            <th>Resident ID</th>\r\n                            <th>Resident Name</th>\r\n                            <th>Building Name</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>12/11/2021</td>\r\n                            <td>#000000</td>\r\n                            <td>#000000</td>\r\n                            <td>Mathews, Dave</td>\r\n                            <td>The Link Minneapolis\r\n                                Low-Rise</td>\r\n                            <td>$300</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>12/11/2021</td>\r\n                            <td>#000000</td>\r\n                            <td>#000000</td>\r\n                            <td>Mathews, Dave</td>\r\n                            <td>The Link Minneapolis\r\n                                Low-Rise</td>\r\n                            <td>$300</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>12/11/2021</td>\r\n                            <td>#000000</td>\r\n                            <td>#000000</td>\r\n                            <td>Mathews, Dave</td>\r\n                            <td>The Link Minneapolis\r\n                                Low-Rise</td>\r\n                            <td>$300</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>12/11/2021</td>\r\n                            <td>#000000</td>\r\n                            <td>#000000</td>\r\n                            <td>Mathews, Dave</td>\r\n                            <td>The Link Minneapolis\r\n                                Low-Rise</td>\r\n                            <td>$300</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>12/11/2021</td>\r\n                            <td>#000000</td>\r\n                            <td>#000000</td>\r\n                            <td>Mathews, Dave</td>\r\n                            <td>The Link Minneapolis\r\n                                Low-Rise</td>\r\n                            <td>$300</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal fade\" id=\"addCard\" tabindex=\"-1\" aria-labelledby=\"addCardLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-3 header-style\">\r\n            <div class=\"modal-header border-0 \">\r\n                <!-- <h5 class=\"modal-title\" id=\"addCardLabel\">ADD A NEW CARD OR BANK</h5> -->\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <div class=\"modal-body text-center\">\r\n                <h5 class=\" pb-2\">ADD A NEW CARD OR BANK</h5>\r\n                <p>Choose a payment method to add:</p>\r\n                <div class=\"form-check w-50 m-auto mb-2\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"payMode\" id=\"creditCard\" checked>\r\n                    <label class=\"form-check-label\" for=\"creditCard\">\r\n                        Credit or Debit Card\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check w-50 m-auto\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"payMode\" id=\"bank\">\r\n                    <label class=\"form-check-label\" for=\"bank\">\r\n                        Bank Account\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center border-0 payment\">\r\n                <button type=\"button\" class=\"btn  btn_theme\">ADD PAYMENT</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal fade\" id=\"savedCards\" tabindex=\"-1\" aria-labelledby=\"savedCardsLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" style=\"max-width:650px !important\">\r\n        <div class=\"modal-content p-3 header-style\">\r\n            <div class=\"modal-header border-0 \">\r\n                <h5 class=\"modal-title\" id=\"savedCardsLabel\"><i class=\"fas fa-arrow-left theme-color pointer\"></i>YOUR\r\n                    CARDS & BANKS</h5>\r\n                <!-- <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> -->\r\n            </div>\r\n\r\n            <div class=\"modal-body text-center\">\r\n                <table class=\"table  table-borderless\">\r\n                    <thead class=\"tableHeader w-100\">\r\n                        <tr class=\"text-center\">\r\n                            <th class=\"padding\"></th>\r\n                            <th class=\"padding\">BRAND</th>\r\n                            <th class=\"padding\">NUMBER</th>\r\n                            <th class=\"padding\">EXPIRES</th>\r\n                            <th class=\"padding\">ACTION</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td class=\"padding\"><input class=\"form-check-input mt-0\" type=\"checkbox\" id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\"></td>\r\n                            <td class=\"padding\"> <span class=\"card-align\">VISA</span></td>\r\n                            <td class=\"padding\">XXXX XXXXX XXXX 0000</td>\r\n                            <td class=\"padding\">00/0000</td>\r\n                            <td class=\"padding\">DEFAULT</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"padding\"><input class=\"form-check-input mt-0\" type=\"checkbox\" id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\"></td>\r\n                            <td class=\"padding\"> <span class=\"card-align\">VISA</span></td>\r\n                            <td class=\"padding\">XXXX XXXXX XXXX 0000</td>\r\n                            <td class=\"padding\">00/0000</td>\r\n                            <td class=\"padding\">DEFAULT</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center border-0 payment\">\r\n                <button type=\"button\" class=\"btn  btn_theme\">SELECT/REPLACE PAYMENT</button>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-payments',\r\n  templateUrl: './payments.component.html',\r\n  styleUrls: ['./payments.component.css']\r\n})\r\nexport class PaymentsComponent implements OnInit {\r\n\r\n  addPayment = true;\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  payAll() {\r\n   this.router.navigate(['/invoices-payment'] , { queryParams: { payAll: true }})\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-return-items',\r\n  templateUrl: './return-items.component.html',\r\n  styleUrls: ['./return-items.component.css']\r\n})\r\nexport class ReturnItemsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <app-refund-items></app-refund-items>\r\n    </div>\r\n</div>\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <app-table-filter (searchInputChange)=\"searchChangeEvent($event)\"></app-table-filter>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-lg-12\">\r\n                <!-- <div class=\"table-height\" infiniteScroll [infiniteScrollDistance]=\"1\" [infiniteScrollThrottle]=\"50\"\r\n                [scrollWindow]=\"false\" (scrolled)=\"onScroll()\"> -->\r\n                    <table class=\"w-100 table table-hover\">\r\n                        <thead>\r\n                            <tr class=\"tableHeader \">\r\n                                <!-- <th width=\"10%\">Resident ID</th> -->\r\n                                <th width=\"10%\">Property Manager</th>\r\n                                <th width=\"10%\">Building Name</th>\r\n                                <th width=\"10%\">Resident Name</th>\r\n                                <th width=\"20%\">Resident Email</th>\r\n                                \r\n                                <th width=\"10%\">Reward Issued</th>\r\n                                <th width=\"10%\">Reward Redeemed</th>\r\n                                <th width=\"10%\">Reward Balance</th>\r\n                                <!-- <th width=\"10%\">Status</th> -->\r\n                                <th width=\"20%\">Transaction</th>\r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of promoCodeList;let i = index\">\r\n                                <!-- <td>{{item?.residentId}}</td> -->\r\n                                <td>{{item?.propertyManagerFirstName}} {{item?.propertyManagerLastName}}</td>\r\n                                <td>{{item?.propertyData?.name}}</td>\r\n                                <td>{{item?.firstName}} {{item?.lastName}}</td>\r\n                                <td>{{item?.email}}</td>\r\n                                \r\n                                <td>${{item?.rewardAmount}}</td>\r\n                                <!-- <td>${{redemedReward(item?.rewardHistory)}}</td> -->\r\n                                <td>${{item?.totalRewardAmountRedeemed}}</td>\r\n                                <!-- <td >{{getStatus(item?.rewardHistory)}}</td> -->\r\n                                <td>${{item?.totalRewardBalance ? item?.totalRewardBalance : '0'}}</td>\r\n                                <td> <button class=\"btn btn-primary\"\r\n                                            [routerLink]=\"['/reward-details/transactions',item.id]\">VIEW TRANSACTIONS</button>\r\n                                </td>\r\n                                \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                <!-- </div> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { RewardmgtService } from '../../services/rewardmgt.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-reward-details',\r\n  templateUrl: './reward-details.component.html',\r\n  styleUrls: ['./reward-details.component.css']\r\n})\r\nexport class RewardDetailsComponent implements OnInit {\r\n\r\n  transactions:any;\r\n  promoCodeList:any;\r\n  count = 9;\r\n  promoCount = 0;\r\n  lastPromoCount = 9;\r\n  promoList : any;\r\n  searchString:any=''\r\n  constructor(private reward:RewardmgtService, private _router: Router , private spinner:NgxSpinnerService) { }\r\n  collection:any=[];\r\n  ngOnInit(): void {\r\n    // this.reward.getRewardList().subscribe((res)=>{\r\n    //   this.collection = res;\r\n    // })\r\n    this.getPromoCodeList();\r\n  }\r\n\r\n  createReward() {\r\n    this._router.navigateByUrl('/create-reward'); \r\n  }\r\n\r\n  getRewardTransaction() {\r\n    this.spinner.show();\r\n    this.reward.getRewardTransaction().subscribe((res) => {\r\n      if (res) {\r\n        this.spinner.hide();\r\n        this.transactions = res;\r\n      }\r\n    })\r\n  }\r\n\r\n  getPromoCodeList() {\r\n    this.spinner.show();\r\n    this.reward.getRewards(this.searchString).subscribe((data: any) => {\r\n      if (data) {\r\n        this.spinner.hide();\r\n        // this.updateList(data);\r\n        // this.promoList = this.getLastViewedProductList();\r\n        this.promoCodeList = data;\r\n      }\r\n    })\r\n  }\r\n\r\n  getLastViewedProductList() {\r\n    return this.promoCodeList;\r\n  }\r\n\r\n  onScroll() {\r\n    console.log(\"Scrolled\")\r\n    if(this.promoCount !== this.lastPromoCount)  {\r\n\r\n    }\r\n  }\r\n\r\n  updateList(obj:any) {\r\n    let isResult = false;\r\n    if (obj && obj.length) {\r\n      this.promoCodeList.push(...obj);\r\n      isResult = true;\r\n    }\r\n\r\n    if (isResult === true) {\r\n      this.promoCount += 9;\r\n    }\r\n\r\n  }\r\n\r\n  getStatus(val: any) : any {\r\n    if (val && val.length > 0) {\r\n      return val.some((item:any)=> {\r\n        return item.status == 1 \r\n      }) ? 'ACTIVATED' : 'NOT ACTIVATED'\r\n    }\r\n  }\r\n\r\n  redemedReward(val: any): any {\r\n    if (val && val.length > 0) {\r\n      if (val.filter((item: any) => item.status == 1).length > 0) {\r\n        return val.filter((item: any) => item.status == 1).reduce((acc: any, item: any) => {\r\n          return acc + item.rewardAmount;\r\n        }, 0)\r\n      }\r\n      else {\r\n        return 0\r\n      }\r\n    }\r\n    else return 0\r\n  }\r\n\r\n  searchChangeEvent(data:any){\r\n    console.log(data)\r\n    this.promoCodeList = []\r\n    this.searchString = data;\r\n    this.getPromoCodeList()\r\n  }\r\n}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-7\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-1 mt-1\">\r\n                        <i class=\"fas fa-arrow-left fa-2x theme-color pointer\"\r\n                            [routerLink]=\"['/','reward-details']\"></i>\r\n                    </div>\r\n                    <div class=\"col-8\">\r\n                        <h4 class=\"text-uppercase\">{{rewardDetails?.firstName}} {{rewardDetails?.lastName}}</h4>\r\n                        <p >{{rewardDetails?.email}}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row fs-5\">\r\n                    <div class=\"col-1\"></div>\r\n                    <!-- <div class=\"border-end col-4\">\r\n                        <p>{{rewardDetails?.residentId}}</p>\r\n                    </div> -->\r\n                    <div class=\"col-7\">\r\n                        <p>{{rewardDetails?.propertyData?.name}}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-1\"></div>\r\n                    <div class=\"col-8 mt-4 box\">\r\n                        <h4>CURRENT BALANCE: <span>${{rewardDetails.totalRewardBalance ? rewardDetails?.totalRewardBalance : 0}}</span></h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-5\">\r\n                <p class=\"fs-5\">Total Rewards Given : <span>${{totalRewards}}</span></p>\r\n                <button class=\"btn btn_theme add-card font10\" data-bs-toggle=\"modal\" data-bs-target=\"#rewards\" style=\"width: 60%;\">View History</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <table class=\"table transaction table-borderless\">\r\n                <thead class=\"tableHeader w-100\">\r\n                    <tr class=\" text-center\">\r\n                        <th>Order Number</th>\r\n                        <th>Date</th>\r\n                        <th>Cart Amount</th>\r\n                        <th>Reward Amount</th>\r\n                        <th>Balance</th>\r\n                        <!-- <th>Invoice #</th>\r\n                        <th>Invoice Amount</th>\r\n                        <th>Invoice Status</th> -->\r\n                        <th>Refund</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let item of rewardTransactions;let i = index\">\r\n                        <td>{{item?.orderId}}</td>\r\n                        <td>{{item?.updatedDatetime | date:'longDate'}}</td>\r\n                        <td>${{item?.totalCartAmount}}</td>\r\n                        <td>${{item?.rewardAmount}}</td>\r\n                        <td>${{item?.rewardBalance}}</td>\r\n                        <!-- (click)=\"goToRefund()\" -->\r\n                        <!-- (click)=\"refund(item.orderId)\" -->\r\n                        <td>\r\n                            <button class=\"btn btn-primary\" *ngIf=\"item.transactionStatus && item.transactionStatus == 'RETURN_INITIATED' && item.rewardAmount\"\r\n                                style=\"border-radius: 5px;\"  (click)=\"goToRefund(item.orderId)\">REFUND</button>\r\n                            <p *ngIf=\"item.transactionStatus != 'RETURN_INITIATED' && item.transactionStatus != 'RETURN_COMPLETED'\" >-</p>\r\n                            <!-- <button class=\"btn btn-dark\"  style=\"cursor: context-menu;\" *ngIf=\"item.transactionStatus != 'RETURN_INITIATED' && item.transactionStatus != 'RETURN_COMPLETED'\">NOT INITIATED</button> -->\r\n                            <button class=\"btn btn-success\" *ngIf=\"item.transactionStatus && item.transactionStatus == 'RETURN_COMPLETED' && item.rewardAmount\" style=\"cursor: context-menu;\" (click)=\"goToRefund(item.orderId)\">REFUNDED</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"rewards\" tabindex=\"-1\" aria-labelledby=\"rewardsLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-3\">\r\n            <div class=\"modal-header border-0 pb-1\">\r\n                \r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n\r\n            <div class=\"modal-body text-left pt-0 pb-1\">\r\n                <h5 class=\"pt-0 text-left\" id=\"addCardLabel\">Reward History</h5>\r\n                <table class=\"table table-bordered\">\r\n                    <thead class=\"tableHeader\">\r\n                      <tr>\r\n                        <th scope=\"col\">Reward Amount</th>\r\n                        <th scope=\"col\">Issued Date</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of history\">\r\n                            <td>${{item?.rewardAmount}}</td>\r\n                            <td>{{item?.updatedDatetime | date: 'longDate'}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { RewardmgtService } from 'src/app/services/rewardmgt.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction-details',\r\n  templateUrl: './transaction-details.component.html',\r\n  styleUrls: ['./transaction-details.component.css']\r\n})\r\nexport class TransactionDetailsComponent implements OnInit {\r\n\r\n  rewardDetails:any = [];\r\n  history:any = [];\r\n  rewardTransactions : any = [];\r\n  totalRewards:any = 0;\r\n  rewardId:any;\r\n\r\n  constructor(private route:ActivatedRoute , private rewardService:RewardmgtService,\r\n    private admin:AdminService, private spinner:NgxSpinnerService , private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(val => {\r\n      if (val.id) {\r\n        this.rewardId = val.id;\r\n        this.getData(val.id);\r\n      }\r\n    })\r\n  }\r\n\r\n  getData(val: any) {\r\n    if (val) {\r\n      this.spinner.show();\r\n      this.rewardService.getRewardTransactionBasedOnId(val).subscribe((data:any) => {\r\n        if (data) {\r\n         this.rewardDetails = data;\r\n         this.history = this.rewardDetails.rewardHistory;\r\n         this.rewardTransactions = this.rewardDetails.rewardTransactions;\r\n         this.getTotal(this.history);\r\n         this.spinner.hide();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  getTotal(arr : any) {\r\n    if(arr && arr.length > 0) {\r\n      let affirm = 0;\r\n      arr.forEach((item:any) => {\r\n       affirm = affirm + item?.rewardAmount;\r\n       return affirm;\r\n     })\r\n     this.totalRewards = affirm; \r\n    }\r\n    else {\r\n      this.totalRewards = 0;\r\n    }\r\n  }\r\n\r\n\r\n  refund(orderId: any) {\r\n    this.spinner.show();\r\n    this.admin.refund(this.rewardId, orderId).subscribe((data) => {\r\n      if (data) {\r\n        this.getData(this.rewardId);\r\n        this.spinner.hide();\r\n      }\r\n    } , err => {\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n\r\n  goToRefund(id:any) {\r\n    this.router.navigate(['/reward-details/transactions/refund' , this.rewardId , id] , { queryParams : { admin : true }})\r\n  }\r\n}\r\n","<app-sidebar></app-sidebar>\r\n\r\n<div class=\"main\">\r\n    <app-header></app-header>\r\n    <div class=\"body\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n            <div class=\"col-lg-2 create-container text-center\" (click)=\"createReward()\">\r\n                <img src=\"assets/create-reward.png\" class=\"create-promo-code\">\r\n                <p>CREATE REWARD</p>\r\n            </div>\r\n            <div class=\"col-lg-10\">\r\n                <app-load-cash [showRewards]=\"false\"></app-load-cash>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"col-lg-12\">\r\n                <app-table-filter (searchInputChange)=\"searchChangeEvent($event)\"></app-table-filter>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"row mt-3\">\r\n            <div class=\"col-lg-12\">\r\n                <h2 class=\"promo-code-text\">RECENTLY CREATED REWARDS</h2>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"col-lg-12\">\r\n                <table class=\"w-100 table table-hover\">\r\n                    <thead>\r\n                        <tr class=\"tableHeader \">\r\n                            <th >Property Manager</th>\r\n                            <th >Building Name</th> \r\n                            <th >Resident Name</th>\r\n                            <th >Resident Email</th>\r\n                             \r\n                            <th >Reward Issued</th>\r\n                            <th >Status</th>\r\n                            <th width=\"15%\">Issued Date</th>\r\n                            <th width=\"25%\">Expiry Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of promoCodeList;let i = index\">\r\n                            <td>{{item?.userData.propertyManagerFirstName}} {{item?.userData.propertyManagerLastName}}</td>\r\n                            <td>{{item?.propertyData?.name}}</td>\r\n                            <td>{{item?.userData?.firstName}} {{item?.userData?.lastName}}</td>\r\n                            <td>{{item?.userData?.email}}</td>\r\n                            <td>${{item?.rewardAmount}}</td>\r\n                            <td>{{(item.deleteStatus == 0 || item.deleteStatus == null) ? ( item?.is_expired ? 'Expired' : (item.status\r\n                                == 1 ? 'Activated' : 'Not Activated')) :\r\n                                'Cancelled'}}</td>\r\n                            <td>{{item?.updatedDatetime | date:'longDate'}}</td>\r\n                            <td class=\"text-center\"><span>{{item?.rewardEndDate | date:'longDate'}} <i  style=\"padding-left: 7px;\" *ngIf=\"(item.deleteStatus == 0 || item.deleteStatus == null) && !item.is_expired\" (click)=\"deletedReward(item)\" class=\"far fa-trash-alt pointer\"></i></span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"deleteReward\" tabindex=\"-1\" aria-labelledby=\"deleteRewardLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-3\">\r\n            <!-- <div class=\"modal-header border-0\">\r\n                <h5 class=\"modal-title\" id=\"deleteRewardLabel\">Modal title</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div> -->\r\n\r\n            <div class=\"modal-body text-center\">\r\n                <h3 class=\"border-bottom pb-2\">DELETE REWARD</h3>\r\n                <h2 class=\"m-0 mt-4\" *ngIf=\"rewardType.type == 'cancel'\">Do you want to cancel ${{rewardType.deleteAmount}} rewards? </h2>\r\n                <h2 class=\"m-0 mt-4\" *ngIf=\"rewardType.type == 'zero'\">Sorry Resident has no rewards to cancel.</h2>\r\n                <h2 class=\"m-0 mt-4\" *ngIf=\"rewardType.type == 'partial'\">Resident has only ${{rewardType.deleteAmount}} rewards that can be canceled.</h2>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center border-0\" *ngIf=\"rewardType.type == 'cancel' || rewardType.type == 'partial'\">\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"deleteRewardService(rewardType.id)\">Save changes</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">Close</button>\r\n            </div>\r\n            <div class=\"modal-footer justify-content-center border-0\" *ngIf=\"rewardType.type == 'zero'\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ngx-spinner bdColor=\"rgba(51,51,51,0.8)\" size=\"medium\" color=\"#fff\" type=\"ball-atom\">\r\n    <p style=\"font-size: 20px; color: white\">Loading...</p>\r\n</ngx-spinner>","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RewardmgtService } from 'src/app/services/rewardmgt.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-rewards',\r\n  templateUrl: './rewards.component.html',\r\n  styleUrls: ['./rewards.component.css']\r\n})\r\nexport class RewardsComponent implements OnInit {\r\n\r\n  buildingDetails: any;\r\n  buildingList: any;\r\n  promoCodeList:any = [];\r\n  promoCodeListMaster: any = [];\r\n  rewardType = {\r\n    type: '',\r\n    deleteAmount: 0,\r\n    id: null\r\n  };\r\n  query:any={\r\n    start:0,\r\n    count:9,\r\n    searchString:''\r\n  }\r\n  valueIn:any;\r\n  isMoreData:boolean = true\r\n  isApiLoading:boolean= false\r\n  constructor(private reward: RewardmgtService, private _router: Router,\r\n    private storage: StorageService,private spinner:NgxSpinnerService ,private toastr: ToastrService) { }\r\n\r\n  collection: any = [];\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getPropertyAddress();\r\n    this.getBuildingName();\r\n    this.getPromoCodeList();\r\n  }\r\n\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  getScrollHeight(event: any) {\r\n    console.log(window.pageYOffset)\r\n    if ((window && window.pageYOffset > 50) && this.isMoreData && !this.isApiLoading) {\r\n      this.query.start = this.query.start + 9;\r\n      this.getPromoCodeList()\r\n    }\r\n  }\r\n  \r\n  createReward() {\r\n    this._router.navigateByUrl('/create-reward');\r\n  }\r\n\r\n  getBuildingName() {\r\n    const userData: any = JSON.parse(this.storage.getUserDetails());\r\n    this.buildingDetails = userData.propertyDataList[0];\r\n  }\r\n\r\n  getPropertyAddress() {\r\n    this.reward.getBuldingList().subscribe((data: any) => {\r\n      if (data) {\r\n        this.buildingList = data['PropertyAddress'];\r\n        this.reward.buildingList.next(data['PropertyAddress']);\r\n      }\r\n    })\r\n  }\r\n\r\n  getPromoCodeList() {\r\n    this.isApiLoading = true\r\n    this.reward.getRecentlyRewards(this.query).subscribe((data: any) => {\r\n    this.isApiLoading = false\r\n      if (data && Array.isArray(data)) {\r\n        this.isMoreData = data.length ? true : false\r\n        data = data.map((x:any)=>{\r\n          if(x.rewardEndDate) {\r\n            const today = new Date();\r\n            const current = new Date(x.rewardEndDate);\r\n            x['is_expired'] = (today > current) ? true : false\r\n          }\r\n          return x;\r\n        });\r\n        this.spinner.hide();\r\n        this.promoCodeList = [...this.promoCodeList, ...data];\r\n        return\r\n      }\r\n      this.isMoreData = false\r\n    },error=>{\r\n      this.spinner.hide();\r\n      this.isMoreData = false\r\n      this.isApiLoading = false\r\n    })\r\n  }\r\n\r\n  deletedReward(item: any,) {\r\n    $('#deleteReward').modal('show');\r\n    const deleteBalance = item.rewardAmount || 0;\r\n    const currentBalance = item.rewardBalance || 0\r\n    const status = item.status;\r\n    \r\n    this.rewardType.id = item.id;\r\n    if (status == 0 || deleteBalance < currentBalance ) {\r\n      this.rewardType.type = 'cancel';\r\n      this.rewardType.deleteAmount = deleteBalance;\r\n    } else if (currentBalance == 0) {\r\n      this.rewardType.type = 'zero';\r\n    } else if(deleteBalance > currentBalance) {\r\n      this.rewardType.type = 'partial';\r\n      this.rewardType.deleteAmount = currentBalance;\r\n    }\r\n  }\r\n  \r\n  deleteRewardService(id: any) {\r\n    if (id) {\r\n      this.spinner.show();\r\n      this.reward.deleteReward(id).subscribe((data:any) => {\r\n        if (data) {\r\n           this.spinner.hide();\r\n           this.toastr.success(`Reward $${data?.detletedAmount} deleted successfully`)\r\n           this.promoCodeList = [];\r\n           this.getPromoCodeList();\r\n           $('#deleteReward').modal('hide');\r\n           this.reward.getBuildingAmount(this.storage.getPropertyId());\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  searchChangeEvent(data:any){\r\n    console.log(data)\r\n    this.promoCodeList = []\r\n    this.query.searchString = data;\r\n    this.query.start = 0;\r\n    this.getPromoCodeList()\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n  constructor(private storage:StorageService) {}\r\n  \r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token =  this.storage.getAccessToken();\r\n    if (token) {\r\n        const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${token}`);\r\n        \r\n        const AuthRequest = request.clone( { headers: headers});\r\n        return next.handle(AuthRequest);\r\n    } else {\r\n        return next.handle(request);\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  buildingList = new BehaviorSubject(null);\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBuildingList() {\r\n    return this.http.get(environment.url + `getCASLProperty/all`).subscribe((data: any) => {\r\n      if (data && data.PropertyAddress) {\r\n        this.buildingList.next(data['PropertyAddress']);\r\n      }\r\n    });\r\n  }\r\n\r\n  createUser(obj: any) {\r\n    const url = environment.url;\r\n    return this.http.post<any>(url + 'add/property/user', obj)\r\n  }\r\n\r\n  signUp(obj: any) {\r\n    const url = environment.url;\r\n    return this.http.post<any>(url + 'rewards/admin/signup', obj)\r\n  }\r\n\r\n  onLogin(loginEmail: any, loginPassword: any) {\r\n    return this.http.post<any>(environment.url + 'rewards/admin/login', { loginEmail: loginEmail, passWord: loginPassword });\r\n  }\r\n\r\n  getUserList(obj: any) {\r\n    const url = this.getQueryString(obj);\r\n    return this.http.get(environment.url + `get/property/users?` + url)\r\n  }\r\n\r\n  deleteUser(number: any, isEnabled: any) {\r\n\r\n    const url = environment.url;\r\n    return this.http.post(url + `remove/property/user?propertyUserId=${number}&isEnabled=${isEnabled}`, {})\r\n  }\r\n\r\n  getRewardTransactions(obj: any) {\r\n    const url = this.getQueryString(obj);\r\n    return this.http.get(environment.url + `reward/transactions/all?` + url)\r\n  }\r\n\r\n  getRewardTransactionBasedOnId(val: any) {\r\n    return this.http.get(environment.url + `property/get/reward/details?rewardId=${val}`)\r\n  }\r\n\r\n  getReconciliation(obj: any) {\r\n    const url = this.getQueryString(obj);\r\n    return this.http.get(environment.url + `get/reward/report?` + url)\r\n  }\r\n\r\n  getQueryString(query: any) {\r\n    let queryArray = [];\r\n    let url = ''\r\n    if (query) {\r\n      for (let prop in query) {\r\n        if (query.hasOwnProperty(prop)) {\r\n          const encode = encodeURIComponent(prop);\r\n          const encodeVal = encodeURIComponent(query[prop]);\r\n          if (encodeVal != null && encodeVal != \"\") {\r\n            queryArray.push(encode + '=' + encodeVal)\r\n          }\r\n        }\r\n      }\r\n      if (queryArray && queryArray.length > 0) {\r\n        url = queryArray.join('&')\r\n      }\r\n    }\r\n    return url;\r\n  }\r\n\r\n  refund(rewardId: any, orderId: any) {\r\n    return this.http.post(environment.url + `property/refund/reward?rewardId=${rewardId}&orderId=${orderId}`, {})\r\n  }\r\n\r\n  forgotPassword(email: any) {\r\n    let queryString = '';\r\n    queryString = `email=${email}`;\r\n    return this.http.get(environment.url + 'rewards/admin/forgotPassword?' + queryString)\r\n  }\r\n\r\n  resetPassword(obj: any) {\r\n    return this.http.post(environment.url + 'rewards/admin/resetPassword', obj)\r\n  }\r\n\r\n  getOrderItems(orderId: any) {\r\n    return this.http.get(environment.url + `cart/order/summary?reference=${orderId}`)\r\n  }\r\n\r\n  reClaimAmount(id: any) {\r\n    return this.http.post(environment.url + `property/reward/reclaim?propertyId=${id}`, {})\r\n  }\r\n\r\n  getClaimAmount(id = null) {\r\n    const propertyId = id ? `?propertyId=${id}` : ''\r\n    return this.http.get(environment.url + `property/reclaim/get` + `${propertyId}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private storage:StorageService,private router:Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (this.storage.getAccessToken()) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n  }\r\n  \r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientSideService {\r\n\r\n  constructor(@Inject(PLATFORM_ID) private platformId: object) { }\r\n\r\n  checkPlatformBrowser() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http'\r\nimport { environment } from 'src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RewardmgtService {\r\n\r\n  buildingAmount = new BehaviorSubject(null);\r\n  buildingList = new BehaviorSubject(null);\r\n  private loginurl = \"http://localhost:3000/login\"\r\n  private signupUrl = \"http://localhost:3000/signup\"\r\n  private rewardUrl = \"http://localhost:3000/reward\"\r\n  constructor(private http:HttpClient, private storage :StorageService) { }\r\n\r\n  getRewardList(){\r\n    console.log(\"Reward List\")\r\n    return this.http.get(this.signupUrl);\r\n  }\r\n  \r\n\r\n  signUp(obj:any) {\r\n    const url = environment.url;\r\n    return this.http.post<any>(url+'property/user/signup',obj)\r\n  }\r\n\r\n  getBuldingList() {\r\n    return this.http.get(environment.url + `getCASLProperty/all`);\r\n  }\r\n\r\n  onLogin(loginEmail: any, loginPassword: any) {\r\n    return this.http.post<any>(environment.url + 'property/user/login', { loginEmail: loginEmail, passWord: loginPassword });\r\n  }\r\n\r\n  createReward(obj:any,objDate:any) {\r\n    const url = environment.url;\r\n    return this.http.post<any>(url+`property/create/reward?endDate=${objDate.endDate}`,obj)\r\n  }\r\n  \r\n  getRewards(searchString:String) {\r\n    let queryString = '';\r\n    const propertyId = this.storage.getPropertyId();\r\n    if (propertyId) {\r\n      queryString = `?propertyId=${propertyId}`\r\n    }\r\n\r\n    if(searchString) {\r\n      queryString +=  `&searchString=${searchString}`\r\n    }\r\n\r\n    return this.http.get(environment.url + `property/get/rewards` + queryString);\r\n  }\r\n  getRecentlyRewards(query:any) {\r\n    let queryString = '';\r\n    const propertyId = this.storage.getPropertyId();\r\n    if (propertyId) {\r\n      queryString = `&propertyId=${propertyId}`\r\n    }\r\n\r\n    if(query.searchString) {\r\n      queryString +=  `&searchString=${query.searchString}`\r\n    }\r\n    return this.http.get(environment.url + `property/rewards/get?start=${query.start}&count=${query.count}` + queryString +``);\r\n  }\r\n\r\n  getRewardTransaction() {\r\n    return this.http.get(environment.url + 'property/user/reward/transactions')\r\n  }\r\n\r\n  getRewardTransactionBasedOnId(val: any) {\r\n    return this.http.get(environment.url + `property/get/reward/details?rewardId=${val}`)\r\n  }\r\n\r\n  loadAmount(obj:any) {\r\n    let queryString;\r\n    queryString = `?propertyId=${obj.id}&propertyLoadAmount=${obj.amount}&paymentToken=${obj.token}&paymentType=${obj.paymentType}`\r\n    return this.http.post(environment.url + 'property/load/amount'+ queryString,{})\r\n  }\r\n\r\n  getBuildingAmount(id: any) {\r\n    return this.http.get(environment.url + `property/amount/get?propertyId=${id}`).subscribe((data:any) => {\r\n      if (data) {\r\n        this.buildingAmount.next(data);\r\n      }\r\n    })\r\n  }\r\n\r\n  forgotPassword(email:any) {\r\n    let queryString = '';\r\n    queryString = `email=${email}`;\r\n    return this.http.get(environment.url + 'property/user/forgotPassword?'+ queryString)\r\n  }\r\n\r\n  resetPassword(obj: any) {\r\n    return this.http.post(environment.url + 'property/user/resetPassword', obj)\r\n  }\r\n\r\n  deleteReward(id: any) {\r\n    return this.http.post(environment.url + `property/delete/reward?rewardId=${id}`,{})\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n  constructor() { }\r\n\r\n  setUserDetails(data: any) {\r\n    localStorage.setItem('userDetails', JSON.stringify(data));\r\n  }\r\n\r\n  getUserDetails() : any{\r\n   return localStorage.getItem('userDetails');\r\n  }\r\n\r\n  getUserName() :any  {\r\n    const userDetails = JSON.parse(this.getUserDetails());\r\n    return `${userDetails['firstName']} ${userDetails['lastName']}`\r\n  \r\n  }\r\n\r\n  logOut() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  getAccessToken(): any {\r\n    const userDetails = JSON.parse(this.getUserDetails());\r\n    return userDetails ? userDetails['id'] : null;\r\n  }\r\n\r\n  getPropertyId(): any {\r\n    const userDetails = JSON.parse(this.getUserDetails());\r\n    return (userDetails && userDetails.propertyDataList && userDetails.propertyDataList.length > 0) ? userDetails.propertyDataList[0]?.id : null\r\n  }\r\n\r\n  getPropertyName(): any {\r\n    const userDetails = JSON.parse(this.getUserDetails());\r\n    return (userDetails.propertyDataList && userDetails.propertyDataList.length > 0) ? userDetails.propertyDataList[0]?.name : null\r\n  }\r\n}\r\n","<ng-container *ngIf = \"!isReconciliation\">\r\n    <div class=\"row\">\r\n        <div class=\"col-5\">\r\n            <select [(ngModel)]=\"propertyId\" (change)=\"onCategoryChange(propertyId)\" name=\"category\" placeholder=\"Select a Building Name\">\r\n                <option value=\"\" >Select a Building Name</option>\r\n                <option [value]=\"property?.id\" *ngFor=\"let property of buildingList\">{{property?.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-6\" >\r\n            <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-search\"></i></span>\r\n                </div>\r\n                <input type=\"text\" [formControl]=\"searchText\" class=\"form-control\" placeholder=\"Search by Property Manager or Email\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf = \"isReconciliation\">\r\n    <div class=\"row align-items-center\">\r\n       \r\n        <div class=\"col-3\">\r\n            <select [(ngModel)]=\"propertyId\" (change)=\"onCategoryChange(propertyId)\" name=\"category\" placeholder=\"Select a Building Name\">\r\n                <option value=\"\" >Select a Building Name</option>\r\n                <option [value]=\"property.id\" *ngFor=\"let property of buildingList\">{{property?.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"col-4\" data-html2canvas-ignore>\r\n            <div class=\"input-group mb-2\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\"><i class=\"fas fa-search\"></i></span>\r\n                </div>\r\n                <input type=\"text\" [formControl]=\"searchText\" class=\"form-control\" placeholder=\"Search by Property Manager or Email\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <input type=\"text\" [maxDate]=\"maxDate\" [autoApply]=\"true\" [closeOnAutoApply]=\"true\" class=\"date-range pointer\" [locale]=\"{applyLabel: 'ok', format: 'YYYY-MM-DD'}\" ngxDaterangepickerMd [(ngModel)]=\"selected\" placeholder=\"Select a Reward Date Range\"\r\n                (change)=\"change($event)\" />\r\n        </div>\r\n        <div class=\"col-2\" data-html2canvas-ignore>\r\n            <button class=\"btn btn-primary\" (click)=\"exportPdf()\">DOWNLOAD REPORT</button>\r\n        </div>\r\n    </div>\r\n</ng-container>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport * as moment from 'moment';\r\nimport * as dayjs from 'dayjs'\r\n\r\n@Component({\r\n  selector: 'app-admin-table-filter',\r\n  templateUrl: './admin-table-filter.component.html',\r\n  styleUrls: ['./admin-table-filter.component.scss']\r\n})\r\nexport class AdminTableFilterComponent implements OnInit {\r\n\r\n  _isReconciliation: boolean;\r\n  searchText = new FormControl({ value: '', disabled: true });\r\n  m = moment();\r\n  myDate = new Date();\r\n  nextDay = this.myDate.setDate(this.myDate.getDate()+1)\r\n  maxDate = dayjs(this.nextDay);\r\n  buildingList: any;\r\n  selected: { startDate: moment.Moment, endDate: moment.Moment };\r\n  initial = false;\r\n  outPutObject: any = {\r\n    search: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    propertyId: '',\r\n    searchString: ''\r\n  }\r\n  disableSearch = true;\r\n\r\n  propertyId = '';\r\n  @Output() selectedFilter: EventEmitter<any> = new EventEmitter();\r\n  @Output() export: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @Input() set isReconciliation(value: boolean) {\r\n    this._isReconciliation = value;\r\n  }\r\n\r\n  get isReconciliation() {\r\n    return this._isReconciliation;\r\n  }\r\n\r\n  constructor(private admin: AdminService) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getBuidlingList();\r\n    this.searchText.valueChanges.pipe(debounceTime(2000), distinctUntilChanged()).subscribe((data) => {\r\n      if (data || data == '') {\r\n        this.outPutObject.searchString = data;\r\n        this.selectedFilter.emit(this.outPutObject);\r\n      }\r\n    })\r\n  }\r\n\r\n  getBuidlingList() {\r\n    this.admin.buildingList.subscribe((data) => {\r\n      if (data) {\r\n        this.buildingList = data;\r\n      }\r\n    })\r\n  }\r\n\r\n  onCategoryChange(val: any) {\r\n    if (val || val == '') {\r\n      if (val == '') {\r\n        this.searchText.disable({ onlySelf: true, emitEvent: false });\r\n      }\r\n      else {\r\n        this.searchText.enable({ onlySelf: true, emitEvent: false });\r\n      }\r\n      this.outPutObject.propertyId = val;\r\n      this.selectedFilter.emit(this.outPutObject);\r\n    }\r\n  }\r\n\r\n  formattedDate(data: any) {\r\n    if (data) {\r\n      return `${(data.$M + 1)}/${data.$D}/${data.$y}`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  change(event: any) {\r\n    console.log(event)\r\n    if (event.startDate != null && event.endDate != null) {\r\n      this.outPutObject.startDate = this.formattedDate(this.selected?.startDate);\r\n      this.outPutObject.endDate = this.formattedDate(this.selected?.endDate);\r\n      this.selectedFilter.emit(this.outPutObject);\r\n    }\r\n  }\r\n\r\n  exportPdf() {\r\n    this.export.emit(true);\r\n  }\r\n}\r\n","<div class=\"cash-container\">\r\n    <div class=\"card text-center\">\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col border-end\">\r\n                    <p class=\"title-font\">Amount Loaded</p>\r\n                    <h5 class=\"fw-bold\">${{(buildingAmountDetails && buildingAmountDetails?.loadedAmount) ? buildingAmountDetails?.loadedAmount : ' 0'}}</h5>\r\n                </div>\r\n                <div class=\"col border-end\">\r\n                    <p class=\"title-font\">Date</p>\r\n                    <h5 class=\"fw-bold\" *ngIf =\"buildingAmountDetails && buildingAmountDetails?.updatedDatetime\">{{buildingAmountDetails?.updatedDatetime | date:'longDate'}}</h5>\r\n                    <h5 class=\"fw-bold\" *ngIf =\"!buildingAmountDetails && !buildingAmountDetails?.updatedDatetime\">-</h5>\r\n                </div>\r\n                <div class=\"d-flex flex-row align-items-center justify-content-around\" [ngClass]=\"{'col-7':showRewards == true,'col-5':showRewards == false}\" >\r\n                    <section>\r\n                        <p class=\"title-font\">Available Balance</p>\r\n                        <h5 class=\"fw-bold\">${{(buildingAmountDetails && buildingAmountDetails?.balanceAmount) ? buildingAmountDetails?.balanceAmount : ' 0'}}</h5>\r\n                    </section>\r\n                    <button class=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#loadCash\">LOAD CASH</button>\r\n                    <button class=\"btn btn-dark\" (click)=\"promoList()\" *ngIf =\"showRewards\">RECENTLY CREATED REWARDS</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal fade\" id=\"loadCash\" tabindex=\"-1\" aria-labelledby=\"loadCashLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content p-4 header-style\">\r\n            <div class=\"modal-header border-0 \">\r\n                <!-- <h5 class=\"modal-title\" id=\"addCardLabel\">ADD A NEW CARD OR BANK</h5> -->\r\n                <button type=\"button\" (click)=\"amount.reset();amountBlock = true\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <ng-container *ngIf =\"amountBlock\">\r\n                <div class=\"modal-body text-left\">\r\n                    <h4 class=\" pb-2\">ENTER AMOUNT </h4>\r\n                    <p class=\"mt-3\">Enter the cash amount you would like to load on your account</p>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"number\" [formControl]=\"amount\" class=\"pass_recovery form-control p-4\"\r\n                            placeholder=\"$ Enter dollar amount\">\r\n                        <div class=\"mt-2\" *ngIf=\"amount.touched && amount?.errors?.required\">\r\n                            Amount is required\r\n                        </div>\r\n                        <div class=\"mt-2\" *ngIf=\"amount.touched && amount?.errors?.positiveNumber\">\r\n                            Enter a valid amount\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer justify-content-between border-0 payment\">\r\n                    <button type=\"button\" class=\"btn  btn_theme\" (click)=\"submitAmount()\">CONFIRM</button>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngIf =\"!amountBlock\">\r\n                <div class=\"modal-body text-left\">\r\n                    <section class=\" \">\r\n                        <h5 class=\" pointer pb-2\" (click)=\"amountBlock = !amountBlock\"><i class=\"fas fa-arrow-left theme-color \"></i> AMOUNT BEING LOADED</h5>\r\n                        <p class=\"mt-3\">We will be charging the following amount to your card or bank account:</p>\r\n                        <h1 class=\"pb-5 fw-bold border-bottom\">${{amount.value}}</h1>\r\n                    </section>\r\n                    <section class=\"mb-3 mt-5\">\r\n                        <h5 class=\" pb-2\">SELECT PAYMENT</h5>\r\n                        <p class=\"mt-3\">Select a form of payment and proceed to add cash to your CA account</p>\r\n                    </section>\r\n                </div>\r\n                <div class=\"modal-footer justify-content-between align-items-center border-0 payment\">\r\n                    <select class=\" ml-unpaid\" placeholder=\"Select a Payment Option\" (change)=\"setMode($event)\">\r\n                        <option [value]=\"paymentModeCredit\">Credit Card/Debit Card</option>\r\n                        <option [value]=\"paymentModeBank\">Bank Account</option>\r\n                    </select>\r\n                    <button type=\"button\" class=\"btn btn-primary \" (click)=\"payNow();amountBlock = true\" data-bs-dismiss=\"modal\">PAY & LOAD CASH</button>\r\n                </div>\r\n            </ng-container>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, Renderer2 } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { RewardmgtService } from 'src/app/services/rewardmgt.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-load-cash',\r\n  templateUrl: './load-cash.component.html',\r\n  styleUrls: ['./load-cash.component.css']\r\n})\r\nexport class LoadCashComponent implements OnInit {\r\n  \r\n  @Input() showRewards: boolean;\r\n  propertyId:any;\r\n  payType :any = 'Credit'\r\n  paymentModeCredit:any = 'Credit';\r\n  paymentModeBank:any = 'Bank';\r\n  amountBlock = true;\r\n  amount = new FormControl('', Validators.required);\r\n  token:any;\r\n  buildingAmountDetails:any;\r\n\r\n  constructor(private router:Router , private spinner:NgxSpinnerService,\r\n    private rewardService:RewardmgtService , private storage:StorageService , private renderer :Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n    this.amount.valueChanges.subscribe((data) => {\r\n      if (data) {\r\n        this.checkValidity(data);\r\n      }\r\n      if(data == 0) {\r\n        this.checkValidity(data);\r\n      }\r\n    })\r\n\r\n    this.propertyId = this.storage.getPropertyId();\r\n    this.rewardService.buildingAmount.subscribe((data) => {\r\n      if (data) {\r\n           this.buildingAmountDetails = data;\r\n      }\r\n    })\r\n  }\r\n\r\n  promoList() {\r\n   this.router.navigate(['/rewards']);\r\n  }\r\n\r\n  checkValidity(value: any) {\r\n    if (value <= 0) {\r\n      this.amount.setErrors({ 'positiveNumber': true })\r\n    }\r\n    else {\r\n      this.amount.setErrors(null)\r\n    }\r\n  }\r\n\r\n  submitAmount() {\r\n    this.amount.markAllAsTouched();\r\n    if (this.amount.valid) {\r\n      this.amountBlock = !this.amountBlock;\r\n    }\r\n  }\r\n\r\n  payNow() {\r\n    if (this.payType == 'Credit') {\r\n      this.stripePayment();\r\n    }\r\n    else {\r\n       this.bankPayment();\r\n    }\r\n  }\r\n\r\n  stripePayment() {\r\n    const self = this;\r\n    const handler = (window as any).StripeCheckout.configure({\r\n      key: environment.stripeKey,\r\n      locale: 'USD',\r\n      token(response: any) {\r\n        self.spinner.show();\r\n        self.token = response.id;\r\n        self.completePayment();\r\n      }, \r\n      closed: function() {\r\n        self.renderer.removeStyle(document.body,'overflow');\r\n      }\r\n    });\r\n\r\n    const amountInCents = Math.floor(self.amount.value * 100);\r\n    handler.open({\r\n      name: 'Inhabitr',\r\n      currency: 'USD',\r\n      amount: amountInCents\r\n    });\r\n  }\r\n\r\n  setMode(event: any) {\r\n    this.payType = <HTMLInputElement>(event.target).value\r\n  }\r\n\r\n  completePayment() {\r\n    const obj = { id: this.propertyId, amount: this.amount.value, token: this.token ,paymentType: this.payType == 'Credit'?'CARD':'BANK'}\r\n    this.rewardService.loadAmount(obj).subscribe((data: any) => {\r\n      \r\n      if(data) {\r\n        this.rewardService.getBuildingAmount(this.propertyId);\r\n        this.spinner.hide();\r\n        this.amount.reset();\r\n        this.renderer.removeStyle(document.body,'overflow');\r\n        // this.router.navigate(['/create-reward']);\r\n      }\r\n    },err => {\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n\r\n\r\n  bankPayment() {\r\n    const self = this;\r\n    const handler = (window as any).Plaid.create({\r\n      env: 'sandbox',\r\n      clientName: 'Inhabitr',\r\n      key: '74ca8ca3dead06d399c082d47e9a1d',\r\n      product: ['auth'],\r\n      selectAccount: true,\r\n      onLoad() { },\r\n      onSuccess(publicToken:any, metadata:any) {\r\n        self.spinner.show();\r\n        self.token = publicToken;\r\n        self.completePayment();\r\n      },\r\n      onExit(err:any, metadata:any) {\r\n        self.spinner.hide();\r\n        self.renderer.removeStyle(document.body,'overflow');\r\n        if (err != null) {\r\n        }\r\n        \r\n      },\r\n      onEvent(eventName:any, metadata:any) {\r\n        self.spinner.hide();\r\n        self.renderer.removeStyle(document.body,'overflow');\r\n      }\r\n    });\r\n    handler.open();\r\n  }\r\n}\r\n","<div class=\"refund\">\r\n    <h4><i class=\"fas fa-arrow-left fa-1x theme-color pointer\" style=\"margin-right: 10px;\" (click)=\"goBack()\"></i>Refund\r\n        Item(s)</h4>\r\n</div>\r\n<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-8 col-md-12 col-12\">\r\n                <ng-container *ngFor=\"let items of orderItems ; let i = index\">\r\n                    <div class=\"row mb-4\">\r\n                        <div class=\"col-lg-9 col-md-6 col-12 d-flex \">\r\n                            <div class=\"d-flex flex-row align-items-center\">\r\n                                <div class=\"img-container\"><img [src]=\"items.itemImageUrl\"></div>\r\n                                <div class=\"content\">\r\n                                    <section>\r\n                                        <p class=\"fw-bold m-0\">{{items?.itemName}}</p>\r\n                                        <p class=\"mt-2 mb-2\">Full Price: ${{items?.itemOriginalPrice}}</p>\r\n                                        <p class=\"mt-2 mb-2\">Quantity: {{items?.itemQuantity}}</p>\r\n                                        <ng-container *ngIf=\"items?.itemType == 'PRODUCT'\">\r\n                                            <p class=\"mt-2 mb-2 fw-bold\"\r\n                                                *ngIf=\"items?.packageProducts[0]?.returnStatus == 'INITIATED' || items?.packageProducts[0]?.returnStatus == 'IN-PROGRESS' || items?.packageProducts[0]?.returnStatus == 'RETURN_COMPLETED'\">\r\n                                                Returned</p>\r\n                                        </ng-container>\r\n                                    </section>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mt-4 mb-4\" *ngIf=\"items?.itemType == 'PACKAGE'\">\r\n                        <p>Items included in this set <i class=\"fas fa-chevron-down\"\r\n                                (click)=\"productdisplayCart(items.id)\"></i>\r\n                        </p>\r\n                        <ng-container *ngIf=\"isproductshow && productId===items.id\">\r\n                            <div class=\"row\">\r\n                                <div clas=\"col-8\">\r\n                                    <hr>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let packageItems of items?.packageProducts\">\r\n                                <div class=\"col-lg-8 col-md-6 col-12 d-flex mt-2 mb-2 included-set\">\r\n                                    <div class=\"d-flex flex-row align-items-center\">\r\n                                        <div class=\"img-container\"><img [src]=\"packageItems.productImage\"></div>\r\n                                        <div class=\"content\">\r\n                                            <section>\r\n                                                <p class=\"fw-bold m-0\">{{packageItems?.productName}}</p>\r\n                                                <p class=\"mt-2 mb-2\">Full Price : ${{packageItems?.price | number:\r\n                                                    '1.0-0'}}\r\n                                                </p>\r\n                                            </section>\r\n                                            <p class=\"mt-2 mb-2 fw-bold\"\r\n                                                *ngIf=\"packageItems?.returnStatus == 'INITIATED' || packageItems?.returnStatus == 'IN-PROGRESS' || packageItems?.returnStatus == 'RETURN_COMPLETED'\">\r\n                                                Returned</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"col-lg-4 col-md-12 col-12\">\r\n                <ng-container>\r\n                    <section>\r\n                        <p><span class=\"fw-bold\">Total Order Amount: </span><span>${{orderData?.total ? orderData?.total\r\n                                :\r\n                                '0'}}</span></p>\r\n                        <p><span class=\"fw-bold\">Reward Payment: </span><span>${{orderData?.totalRewardAmount ?\r\n                                orderData?.totalRewardAmount : '0'}}</span></p>\r\n                        <p><span class=\"fw-bold\">Card/Bank/Affirm: </span><span>${{orderData?.totalCartPaymentAmount ?\r\n                                orderData?.totalCartPaymentAmount : '0'}}</span></p>\r\n                        <p><span class=\"fw-bold\">Refund Total Amount: </span><span>${{rewardAmount ?\r\n                            rewardAmount:'0'}}</span></p>\r\n                        <!-- <p><span class=\"fw-bold\">Refund Card Total Amount: </span><span>${{refundToCard ? refundToCard :\r\n                                '0'}}</span></p> -->\r\n                    </section>\r\n                </ng-container>\r\n               \r\n                <ng-container *ngIf=\"orderData?.returnStatus == 'RETURN_COMPLETED' || orderData?.refundRewardTotal\">\r\n                    <section class=\"margin-refund\">\r\n                        <div class=\"d-flex flex-row justify-content-between\">\r\n                            <p><span class=\"fw-bold\">Reward Refund: </span><span>${{orderData?.refundRewardTotal ?\r\n                                    orderData?.refundRewardTotal\r\n                                    : '0'}} </span></p>\r\n                            <p><span class=\"badge rounded-pill bg-success\">Success</span></p>\r\n                        </div>\r\n                        <div class=\"d-flex flex-row justify-content-between\">\r\n                            <p *ngIf=\"orderData?.paymentType == 'CARD,REWARD' || orderData?.paymentType == 'CARD'\"><span class=\"fw-bold\">Card Refund: </span><span> ${{orderData?.refundStripeTotal ?\r\n                                    orderData?.refundStripeTotal : '0'}}</span></p>\r\n                            <p *ngIf=\"orderData?.paymentType == 'BANK,REWARD' || orderData?.paymentType == 'BANK'\"><span class=\"fw-bold\">Bank Refund: </span><span> ${{orderData?.refundStripeTotal ?\r\n                                    orderData?.refundStripeTotal : '0'}}</span></p>\r\n                            <p *ngIf=\"orderData?.paymentType == 'AFFIRM,REWARD' || orderData?.paymentType == 'AFFIRM'\"><span class=\"fw-bold\">Affirm Refund: </span><span> ${{orderData?.refundStripeTotal ?\r\n                                    orderData?.refundStripeTotal : '0'}}</span></p>\r\n                            <p><span class=\"badge rounded-pill bg-dark\">Pending</span></p>\r\n                        </div>\r\n                    </section>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"orderData?.returnStatus == 'IN-PROGRESS'\">\r\n                    <button class=\"btn btn-primary\" (click)=\"refundComplete()\">REFUND</button>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-refund-items',\r\n  templateUrl: './refund-items.component.html',\r\n  styleUrls: ['./refund-items.component.css']\r\n})\r\nexport class RefundItemsComponent implements OnInit {\r\n\r\n  isproductshow: any = false;\r\n  productId: any;\r\n  rewardId: any;\r\n  admin: any;\r\n  orderId: any;\r\n  orderItems: any;\r\n  orderData: any;\r\n  rewardAmount: any;\r\n  rewardRefund: any;\r\n  refundToCard:any;\r\n\r\n  constructor(private route: ActivatedRoute, private _router: Router,\r\n    private adminService: AdminService, private spinner: NgxSpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((data) => {\r\n      if (data.id && data.orderId) {\r\n        this.rewardId = data.id;\r\n        this.orderId = data.orderId;\r\n        this.getOrderList();\r\n      }\r\n    })\r\n    this.route.queryParams.subscribe((data) => {\r\n      if (data.admin) {\r\n        this.admin = data.admin;\r\n      }\r\n    })\r\n  }\r\n\r\n  productdisplayCart(i: number) {\r\n    this.isproductshow = !this.isproductshow;\r\n    this.productId = i;\r\n  }\r\n\r\n  goBack() {\r\n    if (this.admin == \"true\") {\r\n      this._router.navigate(['/reward-details/transactions', this.rewardId])\r\n    }\r\n    else {\r\n      this._router.navigate(['/superadmin/dashboard/transactions', this.rewardId])\r\n    }\r\n  }\r\n\r\n  getOrderList() {\r\n    this.spinner.show();\r\n    this.adminService.getOrderItems(this.orderId).subscribe((data: any) => {\r\n      if (data && data.orderItems) {\r\n        this.orderData = data;\r\n        this.orderItems = data.orderItems;\r\n        this.rewardAmount = this.calculateRefundAmount(this.orderItems);\r\n        this.rewardRefund = this.getActualRefundAmount();\r\n        // this.refundToCard = Math.abs(this.rewardAmount - this.orderData?.totalRewardAmount);\r\n        this.spinner.hide();\r\n      }\r\n    }, err => {\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n\r\n  getActualRefundAmount() {\r\n    if (this.orderData.totalRewardAmount < this.rewardAmount) return this.orderData.totalRewardAmount; else return this.rewardAmount\r\n\r\n  }\r\n\r\n  calculateRefundAmount(orderItems: any) {\r\n    let packageItems: any = [];\r\n    let totalOrderItems: any = [];\r\n    let totalPrice: any = 0;\r\n\r\n    orderItems.forEach((element: any) => {\r\n      if (element && element.packageProducts && element.packageProducts.length) {\r\n        element.packageProducts.forEach((item: any) => {\r\n          if (item) {\r\n            item.itemQuantity = element.itemQuantity;\r\n            packageItems?.push(item)\r\n          }\r\n        })\r\n      }\r\n      // else {\r\n      //   totalOrderItems?.push(element)\r\n      // };\r\n    })\r\n    const price = packageItems.filter((data: any) => {\r\n      if (data) {\r\n        return (data && data?.returnStatus == \"INITIATED\" || data?.returnStatus == \"IN-PROGRESS\" || data?.returnStatus == \"RETURN_COMPLETED\")\r\n      }\r\n    }).reduce((acc: any, item: any) => {\r\n      return acc + Math.round(item.price * item.itemQuantity);\r\n    }, 0);\r\n    price ? totalPrice += price : totalPrice = totalPrice;\r\n\r\n    // const itemPrice = totalOrderItems.filter((data: any) => {\r\n    //   if (data) {\r\n    //     return (data && data?.returnStatus == \"INITIATED\" || data?.returnStatus == \"IN-PROGRESS\" || data?.returnStatus == \"COMPLETED\")\r\n    //   }\r\n    // }).reduce((acc: any, item: any) => {\r\n    //   return acc + Math.round(item.itemOriginalPrice)\r\n    // }, 0);\r\n    // itemPrice ? totalPrice += itemPrice : totalPrice = totalPrice;\r\n\r\n    return totalPrice;\r\n  }\r\n\r\n  refundComplete() {\r\n    this.spinner.show();\r\n    this.adminService.refund(this.rewardId, this.orderId).subscribe((data: any) => {\r\n      if (data) {\r\n        this.getOrderList();\r\n        this.spinner.hide();\r\n      }\r\n    }, (err: any) => {\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl,FormBuilder } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { StorageService} from '../../../services/storage.service'\r\n@Component({\r\n  selector: 'app-table-filter',\r\n  templateUrl: './table-filter.component.html',\r\n  styleUrls: ['./table-filter.component.css']\r\n})\r\nexport class TableFilterComponent implements OnInit {\r\n\r\n  selected: any;\r\n  SearchValue:any;\r\n @Output() searchInputChange = new EventEmitter();\r\n  valueIn:any;\r\n  searchText = new FormControl();\r\n  constructor(private storageService:StorageService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.searchText.valueChanges.pipe(debounceTime(2000), distinctUntilChanged()).subscribe((data:any) => {\r\n      if (data || data == '') {\r\n        this.searchInputChange.emit(data);\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-lg-7\">\r\n        <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\"><i class=\"fas fa-search\"></i></span>\r\n            </div>\r\n            <!-- <input type=\"text\" class=\"form-control\" [(ngModel)]='valueIn' (keyup.enter)=\"searchData(valueIn)\"   placeholder=\"Search by Resident Name , Building Name\"> -->\r\n            <input type=\"text\" class=\"form-control\" [formControl]=\"searchText\"    placeholder=\"Search by Resident Name , Building Name\">\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TableFilterComponent } from './components/table-filter/table-filter.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\r\nimport { LoadCashComponent } from './components/load-cash/load-cash.component';\r\nimport { AdminTableFilterComponent } from './components/admin-table-filter/admin-table-filter.component';\r\nimport { RefundItemsComponent } from './components/refund-items/refund-items.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TableFilterComponent,\r\n    LoadCashComponent,\r\n    AdminTableFilterComponent,\r\n    RefundItemsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxDaterangepickerMd.forRoot(),\r\n    ReactiveFormsModule\r\n  ],\r\n  exports:[TableFilterComponent,LoadCashComponent , FormsModule , AdminTableFilterComponent , RefundItemsComponent]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  url: 'https://ca-studentdev.inhabitr.com/app/inhabitr/saffron/ws/',\r\n  stripeKey: 'pk_test_uYzRdKckia4c4F4UgZtM9J9T',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"]}