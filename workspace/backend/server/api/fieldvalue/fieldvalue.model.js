
'use strict';

var mongoose = require('mongoose'),
    Schema = mongoose.Schema;

var FieldvalueSchema = new Schema({
  active: {type:Boolean,default:true},
  created_at: { type: Date, required: true, default: Date.now },
  updated_at: Date,
  last_update_userid:{type:Schema.Types.ObjectId,ref:'User'},
  encryptedid:String,
  // fieldvalues: [{}],
  documentid: {type:Schema.Types.ObjectId,ref:'Document'},
  insertedemail: String,
  dateformats:String,
  type:String,
  value:String,
  height:Number,
  width:Number,
  top:Number,
  left:Number,  
  id:String,
  required:Boolean,
  hidden:Boolean,
  readonly:Boolean,
  restrict:String,
  fieldtype:String,
  people:String,
  fontstyle:String,
  maxlength:Number,
  minlength:Number,
  label:String,
  align:String,
  placeholder:String,
  active: Boolean,
  originalfilename:String,
  path:String,
  size:String,
  link:String,
  uid:{type:Schema.Types.ObjectId,ref:'User'},
  organizationid:{type:Schema.Types.ObjectId,ref:'User'},
  active: {type:Boolean,default:true},
  last_update_userid:{type:Schema.Types.ObjectId,ref:'User'},
  folderid:{type:Schema.Types.ObjectId,ref:'Folder'},
  isFile:{ type: Boolean,  default: true },
  encryptedid:String,
  signaturebaseData: {type:String},
  type:String,
  fontText:String,
  fontStyle:String,
  signatureType:String,
  photoType:String,
  stampType:String,
  signatureId:{type:Schema.Types.ObjectId,ref:'Signature'},
  photoId:{type:Schema.Types.ObjectId,ref:'Photo'},
  stampId:{type:Schema.Types.ObjectId,ref:'Stamp'},
  name:String,
  dependency:String,
  dependencytype:String,
  class:{ type: String, required: true, default: "field" },
  dateacess:{ type: String, required: true, default: "Edit" },
  optionvalue:String,
  radiobuttonvalue:String,
  radiobuttondisplay:String,
  longitude:Number,
  latitude:Number,
});

module.exports = mongoose.model('Fieldvalue', FieldvalueSchema);